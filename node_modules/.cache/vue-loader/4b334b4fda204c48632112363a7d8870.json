{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/realTime/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/realTime/user/index.vue","mtime":1561515190000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport userDetail from './userDetail'\nimport search from './search'\nimport tagSelect from './tagSelect'\nimport { userPortraitData, userLabelData } from '@/http/api/realTimeApi'\nconst deepFind = (arr, condition, children) => {\n  let main = null\n  try {\n    (function poll (arr, level) {\n      if (!Array.isArray(arr)) return\n      for (let i = 0; i < arr.length; i++) {\n        const item = arr[i]\n        const isFind = (condition && condition(item, i, level)) || false\n        if (isFind) {\n          main = item\n          throw Error\n        } else if (children && item[children] && item[children].length) {\n          poll(item[children], level + 1)\n        } else if (i === arr.length - 1) {\n          main = {}\n        }\n      }\n    })(arr, 0)\n  } catch (err) {}\n  return main\n}\nexport default {\n  components: {\n    userDetail,\n    search,\n    tagSelect\n  },\n  data () {\n    return {\n      showResult: false,\n      keywords: '',\n      isDisabled: false,\n      selectLabels: [],\n      userProfileResult: {},\n      userInfo: {}\n    }\n  },\n  methods: {\n    searchInput (val) {\n      if (val === '') {\n        this.keywords = ''\n        return\n      }\n      userPortraitData(val)\n        .then(result => {\n          if (result.length === 0) {\n            this.$message.error(this.$t('UserDoes'))\n            return\n          }\n          this.keywords = val\n          this.userPortraitData = result\n        })\n        .catch(res => {\n          this.$message.error(res)\n        })\n      this.showResult = false\n    },\n    tagAdd (val) {\n      this.selectLabels = val\n    },\n    findFiveLevelLabelId (labelId) {\n      let result = deepFind(\n        this.userPortraitData,\n        item => item.labelId === labelId,\n        'children'\n      )\n      return result && result.labelValueId ? result.labelValueId : ''\n    },\n    output () {\n      if (!this.keywords) {\n        this.$message.error(this.$t('PleaseUserInformation'))\n        return false\n      }\n      let nolabelIdArr = []\n      this.selectLabels.forEach(item => {\n        let labelId = this.findFiveLevelLabelId(item.labelId)\n        if (!labelId) {\n          nolabelIdArr.push(item.value)\n        }\n\n        item.labelValueId = labelId\n      })\n      if (this.selectLabels.length === 0) {\n        this.$message.error(this.$t('PleaseLabelOptions'))\n        return false\n      }\n      if (nolabelIdArr.length > 0) {\n        this.$message.error(\n          `${this.$t('userLabel')}:[${nolabelIdArr.join('、')}]`\n        )\n        return false\n      }\n\n      this.isDisabled = true\n      this.$http\n        .get(\n          'https://api.motouat.com.cn/cn/gucpApi/getUserInfo?paramId=' +\n            this.keywords\n        )\n        .then(data => {\n          this.userInfo = data.body\n        })\n      userLabelData(JSON.stringify(this.selectLabels))\n        .then(data => {\n          this.showResult = true\n          this.userProfileResult = data\n        })\n        .finally(res => {\n          this.isDisabled = false\n        })\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/realTime/user","sourcesContent":["<template>\n  <div class=\"user-container\">\n    <div class=\"search-outside-wrap\">\n      <el-card class=\"search-wrapper\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <search @search-input=\"searchInput\" />\n          </el-col>\n          <el-col :span=\"12\">\n            <tag-select @add=\"tagAdd\" />\n          </el-col>\n        </el-row>\n      </el-card>\n      <div class=\"search-input\">\n        <el-button\n          :disabled=\"isDisabled\"\n          circle\n          @click=\"output\"\n          icon=\"el-icon-plus\"\n        />\n      </div>\n    </div>\n    <div v-if=\"showResult\" class=\"result-continer\">\n      <user-detail\n        :user-profile-result=\"userProfileResult\"\n        :user-info=\"userInfo\"\n      />\n    </div>\n  </div>\n</template>\n<script>\nimport userDetail from './userDetail'\nimport search from './search'\nimport tagSelect from './tagSelect'\nimport { userPortraitData, userLabelData } from '@/http/api/realTimeApi'\nconst deepFind = (arr, condition, children) => {\n  let main = null\n  try {\n    (function poll (arr, level) {\n      if (!Array.isArray(arr)) return\n      for (let i = 0; i < arr.length; i++) {\n        const item = arr[i]\n        const isFind = (condition && condition(item, i, level)) || false\n        if (isFind) {\n          main = item\n          throw Error\n        } else if (children && item[children] && item[children].length) {\n          poll(item[children], level + 1)\n        } else if (i === arr.length - 1) {\n          main = {}\n        }\n      }\n    })(arr, 0)\n  } catch (err) {}\n  return main\n}\nexport default {\n  components: {\n    userDetail,\n    search,\n    tagSelect\n  },\n  data () {\n    return {\n      showResult: false,\n      keywords: '',\n      isDisabled: false,\n      selectLabels: [],\n      userProfileResult: {},\n      userInfo: {}\n    }\n  },\n  methods: {\n    searchInput (val) {\n      if (val === '') {\n        this.keywords = ''\n        return\n      }\n      userPortraitData(val)\n        .then(result => {\n          if (result.length === 0) {\n            this.$message.error(this.$t('UserDoes'))\n            return\n          }\n          this.keywords = val\n          this.userPortraitData = result\n        })\n        .catch(res => {\n          this.$message.error(res)\n        })\n      this.showResult = false\n    },\n    tagAdd (val) {\n      this.selectLabels = val\n    },\n    findFiveLevelLabelId (labelId) {\n      let result = deepFind(\n        this.userPortraitData,\n        item => item.labelId === labelId,\n        'children'\n      )\n      return result && result.labelValueId ? result.labelValueId : ''\n    },\n    output () {\n      if (!this.keywords) {\n        this.$message.error(this.$t('PleaseUserInformation'))\n        return false\n      }\n      let nolabelIdArr = []\n      this.selectLabels.forEach(item => {\n        let labelId = this.findFiveLevelLabelId(item.labelId)\n        if (!labelId) {\n          nolabelIdArr.push(item.value)\n        }\n\n        item.labelValueId = labelId\n      })\n      if (this.selectLabels.length === 0) {\n        this.$message.error(this.$t('PleaseLabelOptions'))\n        return false\n      }\n      if (nolabelIdArr.length > 0) {\n        this.$message.error(\n          `${this.$t('userLabel')}:[${nolabelIdArr.join('、')}]`\n        )\n        return false\n      }\n\n      this.isDisabled = true\n      this.$http\n        .get(\n          'https://api.motouat.com.cn/cn/gucpApi/getUserInfo?paramId=' +\n            this.keywords\n        )\n        .then(data => {\n          this.userInfo = data.body\n        })\n      userLabelData(JSON.stringify(this.selectLabels))\n        .then(data => {\n          this.showResult = true\n          this.userProfileResult = data\n        })\n        .finally(res => {\n          this.isDisabled = false\n        })\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n@import \"../../../assets/less/variables.less\";\n\n.message-tips {\n  margin-top: 0;\n  margin-bottom: 20px;\n}\n\n.result-continer {\n  margin-top: 35px;\n}\n\n.el-select .el-input {\n  width: 130px;\n}\n\n.input-with-select .el-input-group__prepend {\n  background-color: #fff;\n}\n\n.select-label {\n  width: 95%;\n  margin-top: 20px;\n  overflow: hidden;\n\n  .select-label-title {\n    width: 50px;\n    float: left;\n  }\n\n  .select-label-content {\n    margin-bottom: 6px;\n    margin-left: 6px;\n    float: left;\n    width: auto;\n    border: 1px solid rgb(180, 180, 174);\n    padding: 0 10px;\n    border-radius: 10px;\n    background: #fff;\n  }\n\n  .actives {\n    background: #f4f8f9;\n    border: 1px solid #c0c4cc;\n  }\n\n  span {\n    display: inline-block;\n    text-align: center;\n  }\n\n  .active {\n    color: #c0c4cc;\n  }\n\n  .remove {\n    display: inline-block;\n    padding: 0 6px 0 10px;\n    cursor: pointer;\n  }\n}\n</style>\n"]}]}