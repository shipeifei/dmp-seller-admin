{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/sys/profile/createEditDialog.vue?vue&type=style&index=0&id=6b400cd0&lang=less&scoped=true&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/sys/profile/createEditDialog.vue","mtime":1559542041000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/less-loader/dist/cjs.js","mtime":1561617794000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.move-item {\n  display: flex;\n  align-items: center;\n  height: 50px;\n  div {\n    display: flex;\n    align-items: center;\n    height: 100%;\n  }\n}\n.icon {\n  font-size: 20px;\n  color: #90a4ae;\n  text-align: center;\n  margin-left: 8px;\n  margin-top: -8px;\n  cursor: pointer;\n}\n.el-textarea {\n  width: 500px;\n}\n.el-input,\n.el-select {\n  width: 150px;\n  padding: 0;\n  margin: 0;\n}\n",{"version":3,"sources":["createEditDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"createEditDialog.vue","sourceRoot":"src/views/sys/profile","sourcesContent":["<template>\n    <gucp-dialog ref=\"recommandDialog\" :title=\"dialog.title\" :confirm-label=\"dialog.labelName\" width=\"90%\" @confirm=\"onConfirmCreateType('createForm')\">\n        <el-form ref=\"createForm\" :model=\"createForm\" :inline=\"true\" label-suffix=\":\" label-position=\"right\" label-width=\"130px\">\n            <el-form-item :label=\"$t('source')\" prop=\"platformId\">\n                <el-select v-model=\"createForm.platformId\" :placeholder=\"$t('pleaseChoose')\" product>\n                    <el-option v-for=\"item in platformArr\" :key=\"item.id\" :label=\"item.platformDesc\" :value=\"item.id\" />\n                </el-select>\n            </el-form-item>\n            <el-form-item :label=\"$t('profileName')\" prop=\"profileName\">\n                <el-input v-model=\"createForm.profileName\" :placeholder=\"$t('pleaseContent')\" />\n            </el-form-item>\n\n            <el-form-item :label=\"$t('returnType')\" prop=\"returnType\">\n                <el-select v-model=\"createForm.returnType\" :placeholder=\"$t('pleaseChoose')\" product>\n                    <el-option v-for=\"item in returnTypeArr\" :key=\"item\" :label=\"item\" :value=\"item\" />\n                </el-select>\n            </el-form-item>\n            <br>\n            <el-form-item :label=\"$t('recommandA')\" prop=\"recommNumber\">\n                <el-input v-model.number=\"createForm.recommNumber\" disabled />\n            </el-form-item>\n            <el-form-item :label=\"$t('profileDes')\" prop=\"profileDesc\">\n                <el-input v-model=\"createForm.profileDesc\" :maxlength=\"200\" :placeholder=\"$t('pleaseContent')\" type=\"textarea\" />\n            </el-form-item>\n            <draggable v-model=\"createForm.platStrategy.listSubs\">\n                <div v-for=\"(domain, index) in createForm.platStrategy.listSubs\" :key=\"index\" class=\"move-item\">\n                    <el-form-item :label=\"$t('strategy') + (index + 1)\" :prop=\"'listSubs' + index + 'subStrategy'\" label-width=\"68px\">\n                        <el-select v-model=\"domain.subStrategy\" :placeholder=\"$t('pleaseChoose')\" product @change=\"subStrategyChange(index)\">\n                            <el-option v-for=\"(item, key) in StrategyTypeArr\" :key=\"item\" :label=\"item\" :value=\"key\" />\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item :label=\"$t('algorithm') + (index + 1)\" :prop=\"'listSubs' + index + 'keyParam'\" label-width=\"72px\">\n                        <el-select v-model=\"domain.keyParam\" :placeholder=\"$t('pleaseChoose')\" product>\n                            <el-option v-for=\"(item, key) in tacticsList[index]\" :key=\"key\" :label=\"item\" :value=\"key\" />\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item :label=\"$t('number') + (index + 1)\" :prop=\"'listSubs' + index + 'subStrategyNumber'\" label-width=\"65px\">\n                        <el-input v-model.number=\"domain.subStrategyNumber\" :placeholder=\"$t('pleaseContent')\" />\n                    </el-form-item>\n                    <el-form-item :label=\"$t('Position') + (index +1)\" :prop=\"'listSubs' + index + 'strategyPosition'\" label-width=\"65px\">\n                        <el-input v-model=\"domain.strategyPosition\" :placeholder=\"$t('pleaseContent')\" />\n                    </el-form-item>\n                    <el-form-item :label=\"$t('Codes') + (index +1)\" :prop=\"'listSubs' + index + 'stableCodes'\" label-width=\"60px\">\n                        <el-input v-model=\"domain.stableCodes\" :placeholder=\"$t('pleaseContent')\" :disabled=\"domain.subStrategy!=='stable'\" />\n                    </el-form-item>\n                    <div class=\"action\">\n                        <i v-if=\"index === 0\" class=\"el-icon-circle-plus-outline icon\" @click=\"addDomain\" />\n                        <i v-else class=\"el-icon-remove-outline icon\" @click=\"removeDomain\" />\n                        <i class=\"el-icon-sort icon\" />\n                    </div>\n                </div>\n            </draggable>\n        </el-form>\n    </gucp-dialog>\n</template>\n<script>\nimport draggable from 'vuedraggable'\nimport { getAllPlatform } from '@/http/api/platformApi.js'\nimport { getTacticsMapping } from '@/http/api/profileApi'\nexport default {\n  components: {\n    draggable\n  },\n  data () {\n    return {\n      platformArr: [],\n      returnTypeArr: ['url', 'product'],\n      StrategyTypeArr: [],\n      tacticsObj: {},\n      tacticsList: [{}, {}, {}, {}, {}],\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: ''\n      },\n      createForm: {\n        platformId: '',\n        profileDesc: '',\n        profileName: '',\n        recommNumber: 0,\n        returnType: '',\n        platStrategy: {\n          listSubs: [\n            {\n              keyParam: '',\n              subStrategy: '',\n              subStrategyNumber: '',\n              strategyPosition: '',\n              stableCodes: ''\n            }\n          ]\n        }\n      },\n      date: this.$currentDate()\n    }\n  },\n  beforeUpdate () {\n    let num = 0\n    this.createForm.platStrategy.listSubs.forEach(item => {\n      num += item.subStrategyNumber * 1\n    })\n    if (num !== this.createForm.recommNumber * 1) {\n      this.createForm.recommNumber = num\n    }\n  },\n  methods: {\n    subStrategyChange (index) {\n      let subStrategy = this.createForm.platStrategy.listSubs[index]\n        .subStrategy\n      this.createForm.platStrategy.listSubs[index].keyParam = ''\n      this.tacticsList[index] = this.tacticsObj[subStrategy]\n      this.createForm.platStrategy.listSubs[index].stableCodes = ''\n    },\n    removeDomain (item) {\n      let index = this.createForm.platStrategy.listSubs.indexOf(item)\n      this.createForm.platStrategy.listSubs.splice(index, 1)\n      this.$message.success(this.$t('strategyDelSuccessful'))\n    },\n    addDomain () {\n      // let len = this.createForm.platStrategy.listSubs.length\n      // if (len < 5) {\n      this.createForm.platStrategy.listSubs.push({\n        keyParam: '',\n        subStrategy: '',\n        subStrategyNumber: '',\n        strategyPosition: '',\n        stableCodes: ''\n      })\n      this.$message.success(this.$t('strategyAddSuccessful'))\n      // } else {\n      //   this.$message.error('策略最多添加5个!')\n      // }\n    },\n    open (item) {\n      this.tacticsList = [{}, {}, {}, {}, {}]\n      Promise.all([getAllPlatform(), getTacticsMapping()]).then(res => {\n        this.platformArr = res[0]\n        this.StrategyTypeArr = res[1][0]\n        this.tacticsObj = res[1][1]\n        if (item) {\n          this.createForm = {\n            id: item.id,\n            platformId: item.platformId,\n            profileDesc: item.profileDesc,\n            profileName: item.profileName,\n            recommNumber: item.recommNumber,\n            returnType: item.returnType,\n            strategyId: item.strategyId,\n            platStrategy: {\n              listSubs: item.platStrategy.listSubs\n            }\n          }\n          item.platStrategy.listSubs.forEach((item, index) => {\n            this.tacticsList[index] = this.tacticsObj[item.subStrategy]\n          })\n          this.dialog = {\n            title: this.$t('edit'),\n            labelName: this.$t('save'),\n            buttonType: 'UPDATA'\n          }\n        } else {\n          this.createForm = {\n            platformId: '',\n            profileDesc: '',\n            profileName: '',\n            recommNumber: 0,\n            returnType: '',\n            platStrategy: {\n              listSubs: [\n                {\n                  keyParam: '',\n                  subStrategy: '',\n                  subStrategyNumber: '',\n                  strategyPosition: ''\n                }\n              ]\n            }\n          }\n          this.dialog = {\n            title: this.$t('create'),\n            labelName: this.$t('create'),\n            buttonType: 'CREATE'\n          }\n        }\n        this.$refs.recommandDialog.open()\n      })\n    },\n    onConfirmCreateType (formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let flag = false\n          let obj = {}\n          if (!this.createForm.platformId) {\n            this.$message.error(this.$t('sourceNoempty'))\n            return false\n          } else if (!this.createForm.profileName) {\n            this.$message.error(this.$t('profileNameNoempty'))\n            return false\n          } else if (!this.createForm.returnType) {\n            this.$message.error(this.$t('returnTypeNoempty'))\n            return false\n          } else if (!this.createForm.profileDesc) {\n            this.$message.error(this.$t('profileDesNoempty'))\n            return false\n          }\n\n          this.createForm.platStrategy.listSubs.forEach(item => {\n            if (obj[item.subStrategy]) {\n              this.$message.error(this.$t('profileNorepeat'))\n              return (flag = true)\n            } else if (!item.subStrategy) {\n              this.$message.error(this.$t('strategyNoempty'))\n              return (flag = true)\n            } else if (!item.keyParam) {\n              this.$message.error(this.$t('algorithmNoempty'))\n              return (flag = true)\n            } else if (!Number(item.subStrategyNumber)) {\n              this.$message.error(this.$t('numberNo'))\n              return (flag = true)\n            } else if (!item.strategyPosition) {\n              this.$message.error(this.$t('PositionNo'))\n              return (flag = true)\n            }\n            obj[item.subStrategy] = 1\n          })\n          if (flag) {\n            return false\n          }\n          this.$refs.recommandDialog.close()\n          this.createForm.platStrategy.listSubs.forEach((item, index) => {\n            item.priorityLevel = index + 1\n            delete item.id\n            delete item.crTime\n            delete item.modTime\n            delete item.strategyId\n          })\n          if (this.dialog.buttonType === 'CREATE') {\n            this.$emit('success', { data: this.createForm, code: 0 })\n          } else {\n            this.$emit('success', { data: this.createForm, code: 1 })\n          }\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.move-item {\n  display: flex;\n  align-items: center;\n  height: 50px;\n  div {\n    display: flex;\n    align-items: center;\n    height: 100%;\n  }\n}\n.icon {\n  font-size: 20px;\n  color: #90a4ae;\n  text-align: center;\n  margin-left: 8px;\n  margin-top: -8px;\n  cursor: pointer;\n}\n.el-textarea {\n  width: 500px;\n}\n.el-input,\n.el-select {\n  width: 150px;\n  padding: 0;\n  margin: 0;\n}\n</style>\n"]}]}