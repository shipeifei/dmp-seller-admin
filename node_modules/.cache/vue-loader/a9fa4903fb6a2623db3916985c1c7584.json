{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/components/404.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/components/404.vue","mtime":1553650571000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { sessionStorageApi } from '@/utils/storageApi'\nexport default {\n  mounted () {\n    this.timer = setTimeout(() => {\n      let { pathMatch } = this.$route.params\n      const routers = JSON.parse(sessionStorageApi.get('routers'))\n      let urls = []\n      routers.forEach(route => {\n        route.children.forEach(child => {\n          urls.push(child.path)\n        })\n      })\n      let flag = false\n      urls.forEach(url => {\n        if (pathMatch === url) {\n          flag = true\n        }\n      })\n      if (flag) {\n        this.$router.push(pathMatch)\n      } else {\n        this.$router.push(routers[0].redirect)\n      }\n    }, 0)\n  },\n  deactivated () {\n    this.timer = null\n  }\n}\n",{"version":3,"sources":["404.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"404.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"notFound-page\">\n    <dl>\n      <dt>\n        <!-- <img src=\"../assets/404.svg\" /> -->\n      </dt>\n      <dd>\n        <!-- <p>Can Not Found ÔºÅ</p> -->\n      </dd>\n    </dl>\n  </div>\n</template>\n\n<script>\nimport { sessionStorageApi } from '@/utils/storageApi'\nexport default {\n  mounted () {\n    this.timer = setTimeout(() => {\n      let { pathMatch } = this.$route.params\n      const routers = JSON.parse(sessionStorageApi.get('routers'))\n      let urls = []\n      routers.forEach(route => {\n        route.children.forEach(child => {\n          urls.push(child.path)\n        })\n      })\n      let flag = false\n      urls.forEach(url => {\n        if (pathMatch === url) {\n          flag = true\n        }\n      })\n      if (flag) {\n        this.$router.push(pathMatch)\n      } else {\n        this.$router.push(routers[0].redirect)\n      }\n    }, 0)\n  },\n  deactivated () {\n    this.timer = null\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.notFound-page {\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  img {\n    width: 250px;\n    height: 250px;\n  }\n  p {\n    margin-top: 20px;\n    font-size: 28px;\n    color: #889196;\n  }\n}\n</style>\n"]}]}