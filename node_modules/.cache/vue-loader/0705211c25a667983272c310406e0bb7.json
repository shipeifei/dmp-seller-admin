{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/sys/platform/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/sys/platform/index.vue","mtime":1561373011000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport createEditDialog from './createEditDialog'\nimport {\n  getAllPlatform,\n  saveAndUpdatePlatform,\n  getPlatform,\n  deletePlatform\n} from '@/http/api/platformApi.js'\nexport default {\n  name: 'Platform',\n  components: {\n    createEditDialog\n  },\n\n  data () {\n    return {\n      pageIndex: 1,\n      pageSize: 10,\n      platformArr: []\n    }\n  },\n  mounted () {\n    this.getContent(1)\n  },\n  methods: {\n    getContent () {\n      getAllPlatform().then(res => {\n        this.platformArr = res\n      })\n    },\n    itemChange (...result) {\n      if (result[2]) {\n        this.index = result[1]\n        let id = result[0].id\n        getPlatform(id).then(res => {\n          this.$refs.platfromCreateEditDialog.open(res)\n        })\n      } else {\n        this.$confirm(`${this.$t('ConfirmDelete')} \"${result[0].platformDesc}\"`)\n          .then(() => {\n            deletePlatform(result[0].id).then(() => {\n              this.$message.success(this.$t('Delsuccess'))\n              this.getContent(this.pageIndex)\n            })\n          })\n          .catch(() => {\n            this.$message({\n              type: 'info',\n              message: this.$t('CancelDelete')\n            })\n          })\n      }\n    },\n    handleCurrentChange (pageIndex) {\n      this.pageIndex = pageIndex\n      this.getContent(pageIndex)\n    },\n    getPageData (result) {\n      let { data, code } = result\n      saveAndUpdatePlatform(data)\n        .then(() => {\n          if (code) {\n            this.getContent(this.pageIndex)\n            this.$message.success(this.$t('SourceUpdate'))\n          } else {\n            this.pageIndex = 1\n            this.$message.success(this.$t('SourceCreate'))\n            this.getContent(1)\n          }\n        })\n        .catch(err => {\n          this.$message.error(err.body.message)\n        })\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/sys/platform","sourcesContent":["<template>\n    <div class=\"content-wrapper\">\n        <el-card>\n            <el-button type=\"primary\" size=\"medium\" @click=\"$refs.platfromCreateEditDialog.open()\">\n                {{ $t('create') }}\n                <i class=\"el-icon-plus el-icon--right\" />\n            </el-button>\n        </el-card>\n        <el-table :data=\"platformArr.slice((pageIndex-1)*pageSize,pageIndex*pageSize)\" class=\"hot-table\">\n            <el-table-column :label=\"$t('sourceName')\" prop=\"platformName\" />\n            <el-table-column :label=\"$t('sourceType')\" prop=\"platformType\" />\n            <el-table-column :label=\"$t('sourceDes')\" prop=\"platformDesc\" />\n            <el-table-column :label=\"$t('action')\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"itemChange(scope.row, scope.$index, true)\" />\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"itemChange(scope.row, scope.$index, false)\" />\n                </template>\n            </el-table-column>\n        </el-table>\n        <div class=\"block\">\n            <el-pagination :current-page=\"pageIndex\" :page-size=\"pageSize\" :total=\"platformArr.length\" layout=\"total, prev, pager, next, jumper\" @current-change=\"handleCurrentChange\" />\n        </div>\n        <create-edit-dialog ref=\"platfromCreateEditDialog\" @success=\"getPageData\" />\n    </div>\n</template>\n<script>\nimport createEditDialog from './createEditDialog'\nimport {\n  getAllPlatform,\n  saveAndUpdatePlatform,\n  getPlatform,\n  deletePlatform\n} from '@/http/api/platformApi.js'\nexport default {\n  name: 'Platform',\n  components: {\n    createEditDialog\n  },\n\n  data () {\n    return {\n      pageIndex: 1,\n      pageSize: 10,\n      platformArr: []\n    }\n  },\n  mounted () {\n    this.getContent(1)\n  },\n  methods: {\n    getContent () {\n      getAllPlatform().then(res => {\n        this.platformArr = res\n      })\n    },\n    itemChange (...result) {\n      if (result[2]) {\n        this.index = result[1]\n        let id = result[0].id\n        getPlatform(id).then(res => {\n          this.$refs.platfromCreateEditDialog.open(res)\n        })\n      } else {\n        this.$confirm(`${this.$t('ConfirmDelete')} \"${result[0].platformDesc}\"`)\n          .then(() => {\n            deletePlatform(result[0].id).then(() => {\n              this.$message.success(this.$t('Delsuccess'))\n              this.getContent(this.pageIndex)\n            })\n          })\n          .catch(() => {\n            this.$message({\n              type: 'info',\n              message: this.$t('CancelDelete')\n            })\n          })\n      }\n    },\n    handleCurrentChange (pageIndex) {\n      this.pageIndex = pageIndex\n      this.getContent(pageIndex)\n    },\n    getPageData (result) {\n      let { data, code } = result\n      saveAndUpdatePlatform(data)\n        .then(() => {\n          if (code) {\n            this.getContent(this.pageIndex)\n            this.$message.success(this.$t('SourceUpdate'))\n          } else {\n            this.pageIndex = 1\n            this.$message.success(this.$t('SourceCreate'))\n            this.getContent(1)\n          }\n        })\n        .catch(err => {\n          this.$message.error(err.body.message)\n        })\n    }\n  }\n}\n</script>\n<style lang=\"less\">\n\n</style>\n"]}]}