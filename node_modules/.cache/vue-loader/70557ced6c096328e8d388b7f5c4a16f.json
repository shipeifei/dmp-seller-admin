{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/user/roles/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/user/roles/index.vue","mtime":1561425821000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport createRoleEditDialog from './createRoleEditDialog'\nimport authorityEditDialog from './authorityEditDialog'\nimport { getRoleList, roleModify, roleSwitch, roleAdd } from '@/http/api/rolesApi'\nimport { getAuthorityList } from '@/http/api/authorityApi'\nexport default {\n  components: {\n    createRoleEditDialog,\n    authorityEditDialog\n  },\n  data () {\n    return {\n      disable: false,\n      pageIndex: 1,\n      pageSize: 10,\n      totalCount: 0,\n      allRoleList: [],\n      roleAuthority: {}\n    }\n  },\n  computed: {\n    showList () {\n      let { pageIndex, pageSize, allRoleList } = this\n      return allRoleList.slice((pageIndex - 1) * pageSize, pageIndex * pageSize)\n    }\n  },\n  mounted () {\n    this.getContent()\n  },\n  methods: {\n    getContent () {\n      getRoleList().then(res => {\n        this.allRoleList = res\n        this.totalCount = res.length\n      })\n    },\n    itemChange (...result) {\n      let { id, name, enable, version } = result[0]\n      if (result[1]) {\n        this.roleAuthority = {\n          rid: id,\n          name,\n          enable\n        }\n        getAuthorityList(id).then(res => {\n          this.$refs.authorityEditDialog.open(res)\n        })\n      } else {\n        let str = enable ? this.$t('CloseRole') : this.$t('OpenRole')\n        this.$confirm(str + '   ' + name)\n          .then(() => {\n            roleSwitch({ id, enable: !enable, name, version }).then(() => {\n              this.$message.success(enable ? this.$t('CloseRoleSuccess') : this.$t('OpenRoleSuccess'))\n              this.getContent(this.pageIndex)\n            })\n          })\n          .catch(err => {\n            this.$message.error(err.body.message)\n          })\n      }\n    },\n    handleCurrentChange (pageIndex) {\n      this.pageIndex = pageIndex\n      this.getContent(pageIndex)\n    },\n    getPageData (result) {\n      let { data, code } = result\n      if (code) {\n        roleModify({ ...this.roleAuthority, menuList: data })\n          .then(() => {\n            this.$message.success(this.$t('RoleAuthorization'))\n            this.getContent(this.pageIndex)\n          })\n          .catch(err => {\n            this.$message.error(err.body.message)\n          })\n      } else {\n        roleAdd(data)\n          .then(() => {\n            this.$message.success(this.$t('RoleCreate'))\n            this.getContent()\n          })\n          .catch(err => {\n            this.$message.error(err.body.message)\n          })\n      }\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/user/roles","sourcesContent":["<template>\n  <div class=\"content-wrapper\">\n    <el-card>\n      <el-button type=\"primary\" size=\"medium\" @click=\"$refs.createRoleEditDialog.open()\">\n        {{ $t('create') }}\n        <i class=\"el-icon-plus el-icon--right\" />\n      </el-button>\n    </el-card>\n    <el-table :data=\"showList\" class=\"hot-table\">\n      <el-table-column :label=\"$t('userName')\" prop=\"name\" />\n      <el-table-column :label=\"$t('action')\">\n        <template slot-scope=\" scope\">\n          <el-button :type=\"scope.row.enable ? 'success' : 'info'\" round class=\"btn\"\n            @click=\"itemChange(scope.row, false)\">\n            {{ scope.row.enable ? $t('enable') : $t('disenable') }}\n          </el-button>\n          <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"itemChange(scope.row, true)\" />\n        </template>\n      </el-table-column>\n    </el-table>\n    <create-role-edit-dialog ref=\"createRoleEditDialog\" @success=\"getPageData\" />\n    <authority-edit-dialog ref=\"authorityEditDialog\" @success=\"getPageData\" />\n    <div class=\"block\">\n      <el-pagination :current-page=\"pageIndex\" :page-size=\"pageSize\" :total=\"totalCount\"\n        layout=\"total, prev, pager, next, jumper\" @current-change=\"handleCurrentChange\" />\n    </div>\n  </div>\n</template>\n<script>\nimport createRoleEditDialog from './createRoleEditDialog'\nimport authorityEditDialog from './authorityEditDialog'\nimport { getRoleList, roleModify, roleSwitch, roleAdd } from '@/http/api/rolesApi'\nimport { getAuthorityList } from '@/http/api/authorityApi'\nexport default {\n  components: {\n    createRoleEditDialog,\n    authorityEditDialog\n  },\n  data () {\n    return {\n      disable: false,\n      pageIndex: 1,\n      pageSize: 10,\n      totalCount: 0,\n      allRoleList: [],\n      roleAuthority: {}\n    }\n  },\n  computed: {\n    showList () {\n      let { pageIndex, pageSize, allRoleList } = this\n      return allRoleList.slice((pageIndex - 1) * pageSize, pageIndex * pageSize)\n    }\n  },\n  mounted () {\n    this.getContent()\n  },\n  methods: {\n    getContent () {\n      getRoleList().then(res => {\n        this.allRoleList = res\n        this.totalCount = res.length\n      })\n    },\n    itemChange (...result) {\n      let { id, name, enable, version } = result[0]\n      if (result[1]) {\n        this.roleAuthority = {\n          rid: id,\n          name,\n          enable\n        }\n        getAuthorityList(id).then(res => {\n          this.$refs.authorityEditDialog.open(res)\n        })\n      } else {\n        let str = enable ? this.$t('CloseRole') : this.$t('OpenRole')\n        this.$confirm(str + '   ' + name)\n          .then(() => {\n            roleSwitch({ id, enable: !enable, name, version }).then(() => {\n              this.$message.success(enable ? this.$t('CloseRoleSuccess') : this.$t('OpenRoleSuccess'))\n              this.getContent(this.pageIndex)\n            })\n          })\n          .catch(err => {\n            this.$message.error(err.body.message)\n          })\n      }\n    },\n    handleCurrentChange (pageIndex) {\n      this.pageIndex = pageIndex\n      this.getContent(pageIndex)\n    },\n    getPageData (result) {\n      let { data, code } = result\n      if (code) {\n        roleModify({ ...this.roleAuthority, menuList: data })\n          .then(() => {\n            this.$message.success(this.$t('RoleAuthorization'))\n            this.getContent(this.pageIndex)\n          })\n          .catch(err => {\n            this.$message.error(err.body.message)\n          })\n      } else {\n        roleAdd(data)\n          .then(() => {\n            this.$message.success(this.$t('RoleCreate'))\n            this.getContent()\n          })\n          .catch(err => {\n            this.$message.error(err.body.message)\n          })\n      }\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n  .btn {\n    width: 90px;\n    line-height: 1;\n    &:focus {\n      outline: none;\n    }\n    span {\n      font-size: 14px;\n    }\n  }\n</style>\n"]}]}