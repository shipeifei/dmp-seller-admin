{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/realTime/realTime/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/realTime/realTime/index.vue","mtime":1561098853000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue/dist/vue.runtime.esm';\nimport actionHistory from \"./../history/actionHistory\";\nimport actionHistoryTitle from \"./../history/actionHistoryTitle\";\nimport uuid from '@/utils/uuid';\nimport realTimeDetail from \"./realTimeDetail\";\nimport { getRealTimeStrategy } from '@/http/api/realTimeApi.js';\nexport default {\n  components: {\n    actionHistoryTitle: actionHistoryTitle,\n    actionHistory: actionHistory,\n    realTimeDetail: realTimeDetail\n  },\n  data: function data() {\n    return {\n      showResult: false,\n      doConditions: {},\n      realTimeListArr: null,\n      relateListArr: null\n    };\n  },\n  mounted: function mounted() {\n    Vue.set(this.doConditions, uuid(), null);\n  },\n  methods: {\n    output: function output() {\n      if (this.validate()) {\n        var arr = [];\n\n        for (var i = 0; i < this.$refs.doConditions.length; i++) {\n          arr.push(this.$refs.doConditions[i].getData());\n        }\n\n        this.featruesData = JSON.stringify(arr);\n        var that = this;\n        getRealTimeStrategy(this.featruesData).then(function (response) {\n          that.realTimeListArr = [];\n          that.relateListArr = [];\n          that.realTimeListArr.push(response.realtime);\n          that.relateListArr.push(response.relate);\n          that.showResult = true;\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    },\n    addDoCondition: function addDoCondition() {\n      Vue.set(this.doConditions, uuid(), null);\n    },\n    removeDoCondition: function removeDoCondition(uuid) {\n      Vue.delete(this.doConditions, uuid);\n    },\n    validate: function validate() {\n      var count = 0;\n\n      if (this.$refs.doConditions) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.$refs.doConditions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            if (!item.validate()) {\n              return false;\n            }\n\n            if (item.inputed()) {\n              count++;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (count) {\n        return true;\n      }\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,GAAA,MAAA,0BAAA;AACA,OAAA,aAAA;AACA,OAAA,kBAAA;AACA,OAAA,IAAA,MAAA,cAAA;AACA,OAAA,cAAA;AACA,SAAA,mBAAA,QAAA,2BAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA,kBADA;AAEA,IAAA,aAAA,EAAA,aAFA;AAGA,IAAA,cAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,eAAA,EAAA,IAHA;AAIA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,KAAA,YAAA,EAAA,IAAA,EAAA,EAAA,IAAA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,KAAA,QAAA,EAAA,EAAA;AACA,YAAA,GAAA,GAAA,EAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,YAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,YAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AACA;;AACA,aAAA,YAAA,GAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA;AACA,YAAA,IAAA,GAAA,IAAA;AACA,QAAA,mBAAA,CAAA,KAAA,YAAA,CAAA,CACA,IADA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,IAAA,CAAA,eAAA,GAAA,EAAA;AACA,UAAA,IAAA,CAAA,aAAA,GAAA,EAAA;AACA,UAAA,IAAA,CAAA,eAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA;AACA,UAAA,IAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,MAAA;AACA,UAAA,IAAA,CAAA,UAAA,GAAA,IAAA;AACA,SARA,EAUA,KAVA,CAUA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,SAZA;AAaA;AACA,KAvBA;AAwBA,IAAA,cAxBA,4BAwBA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,KAAA,YAAA,EAAA,IAAA,EAAA,EAAA,IAAA;AACA,KA1BA;AA2BA,IAAA,iBA3BA,6BA2BA,IA3BA,EA2BA;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,KAAA,YAAA,EAAA,IAAA;AACA,KA7BA;AA8BA,IAAA,QA9BA,sBA8BA;AACA,UAAA,KAAA,GAAA,CAAA;;AACA,UAAA,KAAA,KAAA,CAAA,YAAA,EAAA;AAAA;AAAA;AAAA;;AAAA;AACA,+BAAA,KAAA,KAAA,CAAA,YAAA,8HAAA;AAAA,gBAAA,IAAA;;AACA,gBAAA,CAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,qBAAA,KAAA;AACA;;AACA,gBAAA,IAAA,CAAA,OAAA,EAAA,EAAA;AACA,cAAA,KAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;AACA,UAAA,KAAA,EAAA;AACA,eAAA,IAAA;AACA;AACA;AA7CA;AAjBA,CAAA","sourcesContent":["<template>\n  <div class=\"user-container\">\n    <div class=\"search-outside-wrap\">\n      <el-card class=\"search-wrapper\">\n        <div class=\"label-select\">\n          <div>\n            <action-history-title />\n            <action-history\n              v-for=\"(value, key, index) in doConditions\"\n              ref=\"doConditions\"\n              :index=\"index\"\n              :key=\"key\"\n              @add=\"addDoCondition()\"\n              @remove=\"removeDoCondition(key)\"\n            />\n          </div>\n        </div>\n      </el-card>\n      <div class=\"search-input\">\n        <el-button type=\"primary\" circle icon=\"el-icon-plus\" @click=\"output\" />\n      </div>\n    </div>\n    <div v-if=\"showResult\" class=\"result-continer\">\n      <real-time-detail\n        :real-time-list-arr=\"realTimeListArr[0]\"\n        :relate-list-arr=\"relateListArr[0]\"\n      />\n    </div>\n  </div>\n</template>\n<script>\nimport Vue from 'vue/dist/vue.runtime.esm'\nimport actionHistory from './../history/actionHistory'\nimport actionHistoryTitle from './../history/actionHistoryTitle'\nimport uuid from '@/utils/uuid'\nimport realTimeDetail from './realTimeDetail'\nimport { getRealTimeStrategy } from '@/http/api/realTimeApi.js'\nexport default {\n  components: {\n    actionHistoryTitle,\n    actionHistory,\n    realTimeDetail\n  },\n  data () {\n    return {\n      showResult: false,\n      doConditions: {},\n      realTimeListArr: null,\n      relateListArr: null\n    }\n  },\n  mounted () {\n    Vue.set(this.doConditions, uuid(), null)\n  },\n  methods: {\n    output () {\n      if (this.validate()) {\n        var arr = []\n        for (var i = 0; i < this.$refs.doConditions.length; i++) {\n          arr.push(this.$refs.doConditions[i].getData())\n        }\n        this.featruesData = JSON.stringify(arr)\n        let that = this\n        getRealTimeStrategy(this.featruesData)\n          .then(\n            response => {\n              that.realTimeListArr = []\n              that.relateListArr = []\n              that.realTimeListArr.push(response.realtime)\n              that.relateListArr.push(response.relate)\n              that.showResult = true\n            }\n          )\n          .catch(err => {\n            console.log(err)\n          })\n      }\n    },\n    addDoCondition () {\n      Vue.set(this.doConditions, uuid(), null)\n    },\n    removeDoCondition (uuid) {\n      Vue.delete(this.doConditions, uuid)\n    },\n    validate () {\n      let count = 0\n      if (this.$refs.doConditions) {\n        for (let item of this.$refs.doConditions) {\n          if (!item.validate()) {\n            return false\n          }\n          if (item.inputed()) {\n            count++\n          }\n        }\n      }\n      if (count) {\n        return true\n      }\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n@import \"../../../assets/less/variables.less\";\n\n.result-continer {\n  margin-top: 35px;\n}\n</style>\n"],"sourceRoot":"src/views/realTime/realTime"}]}