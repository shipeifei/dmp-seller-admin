{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/sys/hotProduct/createEditDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/sys/hotProduct/createEditDialog.vue","mtime":1561009532000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport { getProductCodeByName } from '@/http/api/platformApi.js';\nexport default {\n  components: {\n    draggable: draggable\n  },\n  data: function data() {\n    return {\n      tableIndex: null,\n      restaurants: [],\n      platformArr: [],\n      sendData: '',\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: 'CREATE'\n      },\n      createForm: {\n        codes: [{}]\n      },\n      isCode: true\n    };\n  },\n  methods: {\n    querySearchAsync: function querySearchAsync(queryString, cb) {\n      var _this = this;\n\n      var restaurants = [];\n      getProductCodeByName(queryString).then(function (res) {\n        restaurants = res;\n        var results = queryString ? restaurants.filter(_this.createStateFilter(queryString)) : restaurants;\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function () {\n          cb(results);\n        }, 0);\n      });\n    },\n    createStateFilter: function createStateFilter(queryString) {\n      return function (state) {\n        return state.codeName.toLowerCase().indexOf(queryString.toLowerCase()) !== -1;\n      };\n    },\n    handleSelect: function handleSelect(item) {\n      this.createForm.codes[this.tableIndex] = item;\n    },\n    focusInput: function focusInput(index) {\n      this.tableIndex = index;\n    },\n    removeDomain: function removeDomain(item) {\n      var index = this.createForm.codes.indexOf(item);\n      this.createForm.codes.splice(index, 1);\n      this.$message.success(this.$t('Delsuccess'));\n    },\n    addDomain: function addDomain() {\n      this.createForm.codes.push({});\n      this.$message.success(this.$t('Addsuccess'));\n    },\n    open: function open(item, resultData) {\n      this.sendData = resultData;\n\n      if (item) {\n        this.createForm = {\n          codes: item\n        };\n        this.dialog = {\n          title: this.$t('edit'),\n          labelName: this.$t('save'),\n          buttonType: 'UPDATE'\n        };\n      } else {\n        this.createForm = {\n          codes: [{}]\n        };\n        this.dialog = {\n          title: this.$t('create'),\n          labelName: this.$t('create'),\n          buttonType: 'CREATE'\n        };\n      }\n\n      this.$refs.hotProductDialog.open();\n    },\n    onConfirmCreateType: function onConfirmCreateType(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var obj = {};\n          var isRepeat = false;\n          var isEmpty = false;\n\n          _this2.createForm.codes.forEach(function (item) {\n            if (obj[item.code]) {\n              isRepeat = true;\n            } else if (!item.code) {\n              isEmpty = true;\n            }\n\n            obj[item.code] = 1;\n          });\n\n          if (isRepeat) {\n            _this2.$message.error(_this2.$t('ProductNorepeated'));\n\n            return;\n          }\n\n          if (isEmpty) {\n            _this2.$message.error(_this2.$t('ProductNoempty'));\n\n            return;\n          }\n\n          _this2.$refs.hotProductDialog.close();\n\n          delete _this2.createForm.localDate;\n\n          if (_this2.dialog.buttonType === 'CREATE') {\n            _this2.$emit('success', {\n              data: _this2.createForm,\n              code: 0\n            });\n          } else {\n            _this2.$emit('success', {\n              data: _this2.createForm,\n              code: 1,\n              dataResource: _this2.sendData\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["createEditDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <gucp-dialog ref=\"hotProductDialog\" :title=\"dialog.title\" :confirm-label=\"dialog.labelName\" width=\"60%\" @confirm=\"onConfirmCreateType('createForm')\">\n        <el-form ref=\"createForm\" :model=\"createForm\" :inline=\"true\" label-suffix=\":\" label-position=\"right\" label-width=\"140px\">\n            <draggable v-model=\"createForm.codes\">\n                <div v-for=\"(domain, index) in createForm.codes\" :key=\"index\" class=\"move-item\">\n                    <el-form-item :label=\"$t('defaultProducts') + (index + 1)\" :prop=\"'createFormcodes' + index + 'subProductId'\">\n                        <el-autocomplete v-model=\"domain.codeName\" :fetch-suggestions=\"querySearchAsync\" :clearable=\"true\" :trigger-on-focus=\"false\" :placeholder=\"$t('pleaseContent')\" value-key=\"codeName\" @select=\"handleSelect\" @focus=\"focusInput(index)\" />\n                        <i v-if=\"index === 0\" class=\"el-icon-circle-plus-outline icon\" @click=\"addDomain\" />\n                        <i v-else class=\"el-icon-remove-outline icon\" @click.prevent=\"removeDomain(domain)\" />\n                        <i class=\"el-icon-sort icon\" />\n                    </el-form-item>\n                </div>\n                <div v-if=\"createForm.codes.length===0\" style=\"color:#cae0fd;\">\n                    {{$t('DataNo')}}\n                    <i class=\"el-icon-circle-plus-outline icon\" @click=\"addDomain\" />\n                </div>\n\n            </draggable>\n        </el-form>\n    </gucp-dialog>\n</template>\n<script>\nimport draggable from 'vuedraggable'\nimport { getProductCodeByName } from '@/http/api/platformApi.js'\nexport default {\n  components: {\n    draggable\n  },\n  data () {\n    return {\n      tableIndex: null,\n      restaurants: [],\n      platformArr: [],\n      sendData: '',\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: 'CREATE'\n      },\n      createForm: {\n        codes: [{}]\n      },\n      isCode: true\n    }\n  },\n\n  methods: {\n    querySearchAsync (queryString, cb) {\n      var restaurants = []\n      getProductCodeByName(queryString).then(res => {\n        restaurants = res\n        var results = queryString\n          ? restaurants.filter(this.createStateFilter(queryString))\n          : restaurants\n        clearTimeout(this.timeout)\n        this.timeout = setTimeout(() => {\n          cb(results)\n        }, 0)\n      })\n    },\n    createStateFilter (queryString) {\n      return state => {\n        return (\n          state.codeName.toLowerCase().indexOf(queryString.toLowerCase()) !== -1\n        )\n      }\n    },\n    handleSelect (item) {\n      this.createForm.codes[this.tableIndex] = item\n    },\n    focusInput (index) {\n      this.tableIndex = index\n    },\n    removeDomain (item) {\n      let index = this.createForm.codes.indexOf(item)\n      this.createForm.codes.splice(index, 1)\n      this.$message.success(this.$t('Delsuccess'))\n    },\n    addDomain () {\n      this.createForm.codes.push({})\n      this.$message.success(this.$t('Addsuccess'))\n    },\n    open (item, resultData) {\n      this.sendData = resultData\n      if (item) {\n        this.createForm = {\n          codes: item\n        }\n        this.dialog = {\n          title: this.$t('edit'),\n          labelName: this.$t('save'),\n          buttonType: 'UPDATE'\n        }\n      } else {\n        this.createForm = {\n          codes: [{}]\n        }\n        this.dialog = {\n          title: this.$t('create'),\n          labelName: this.$t('create'),\n          buttonType: 'CREATE'\n        }\n      }\n      this.$refs.hotProductDialog.open()\n    },\n    onConfirmCreateType (formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let obj = {}\n          let isRepeat = false\n          let isEmpty = false\n          this.createForm.codes.forEach(item => {\n            if (obj[item.code]) {\n              isRepeat = true\n            } else if (!item.code) {\n              isEmpty = true\n            }\n            obj[item.code] = 1\n          })\n          if (isRepeat) {\n            this.$message.error(this.$t('ProductNorepeated'))\n            return\n          }\n          if (isEmpty) {\n            this.$message.error(this.$t('ProductNoempty'))\n            return\n          }\n          this.$refs.hotProductDialog.close()\n          delete this.createForm.localDate\n          if (this.dialog.buttonType === 'CREATE') {\n            this.$emit('success', { data: this.createForm, code: 0 })\n          } else {\n            this.$emit('success', {\n              data: this.createForm,\n              code: 1,\n              dataResource: this.sendData\n            })\n          }\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.move-item {\n  display: flex;\n  align-items: center;\n  height: 50px;\n}\n.icon {\n  font-size: 20px;\n  color: #90a4ae;\n  text-align: center;\n  margin-left: 8px;\n  margin-top: -8px;\n  cursor: pointer;\n}\n.el-textarea {\n  width: 500px;\n}\n.el-input,\n.el-select {\n  width: 150px;\n  padding: 0;\n  margin: 0;\n}\n</style>\n"],"sourceRoot":"src/views/sys/hotProduct"}]}