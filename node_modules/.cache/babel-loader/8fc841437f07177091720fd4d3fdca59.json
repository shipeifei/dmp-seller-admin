{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/src/utils/debounce.js","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/utils/debounce.js","mtime":1553649389000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export function debounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n\n  var later = function later() {\n    // 据上一次触发时间间隔\n    var last = +new Date() - timestamp; // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null; // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // context = this\n    timestamp = +new Date();\n    var callNow = immediate && !timeout; // 如果延时不存在，重新设定延时\n\n    if (!timeout) timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n}",{"version":3,"sources":["/Users/shizhonghua/workspace/sell/src/utils/debounce.js"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","setTimeout","apply","callNow"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0C;AAC/C,MAAIC,OAAJ,EAAaC,IAAb,EAAmBC,OAAnB,EAA4BC,SAA5B,EAAuCC,MAAvC;;AAEA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAY;AACxB;AACA,QAAMC,IAAI,GAAG,CAAC,IAAIC,IAAJ,EAAD,GAAcJ,SAA3B,CAFwB,CAIxB;;AACA,QAAIG,IAAI,GAAGR,IAAP,IAAeQ,IAAI,GAAG,CAA1B,EAA6B;AAC3BN,MAAAA,OAAO,GAAGQ,UAAU,CAACH,KAAD,EAAQP,IAAI,GAAGQ,IAAf,CAApB;AACD,KAFD,MAEO;AACLN,MAAAA,OAAO,GAAG,IAAV,CADK,CAEL;;AACA,UAAI,CAACD,SAAL,EAAgB;AACdK,QAAAA,MAAM,GAAGP,IAAI,CAACY,KAAL,CAAWP,OAAX,EAAoBD,IAApB,CAAT;AACA,YAAI,CAACD,OAAL,EAAcE,OAAO,GAAGD,IAAI,GAAG,IAAjB;AACf;AACF;AACF,GAfD;;AAiBA,SAAO,YAAa;AAAA,sCAATA,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAClB;AACAE,IAAAA,SAAS,GAAG,CAAC,IAAII,IAAJ,EAAb;AACA,QAAMG,OAAO,GAAGX,SAAS,IAAI,CAACC,OAA9B,CAHkB,CAIlB;;AACA,QAAI,CAACA,OAAL,EAAcA,OAAO,GAAGQ,UAAU,CAACH,KAAD,EAAQP,IAAR,CAApB;;AACd,QAAIY,OAAJ,EAAa;AACXN,MAAAA,MAAM,GAAGP,IAAI,CAACY,KAAL,CAAWP,OAAX,EAAoBD,IAApB,CAAT;AACAC,MAAAA,OAAO,GAAGD,IAAI,GAAG,IAAjB;AACD;;AAED,WAAOG,MAAP;AACD,GAZD;AAaD","sourcesContent":["export function debounce (func, wait, immediate) {\n  let timeout, args, context, timestamp, result\n\n  const later = function () {\n    // 据上一次触发时间间隔\n    const last = +new Date() - timestamp\n\n    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last)\n    } else {\n      timeout = null\n      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n      if (!immediate) {\n        result = func.apply(context, args)\n        if (!timeout) context = args = null\n      }\n    }\n  }\n\n  return (...args) => {\n    // context = this\n    timestamp = +new Date()\n    const callNow = immediate && !timeout\n    // 如果延时不存在，重新设定延时\n    if (!timeout) timeout = setTimeout(later, wait)\n    if (callNow) {\n      result = func.apply(context, args)\n      context = args = null\n    }\n\n    return result\n  }\n}\n"]}]}