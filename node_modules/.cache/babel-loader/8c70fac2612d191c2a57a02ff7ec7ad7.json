{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/home/lineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/home/lineChart.vue","mtime":1561604473000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/shizhonghua/workspace/sell/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\nimport resize from '@/views/chart/chartsView/resize';\nimport { getChartData } from '@/http/api/homeApi';\nexport default {\n  mixins: [resize],\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    isFull: {\n      type: Boolean\n    }\n  },\n  watch: {\n    isFull: function isFull() {\n      this.chart.resize();\n    }\n  },\n  mounted: function mounted() {\n    this.getEchart();\n  },\n  methods: {\n    getEchart: function () {\n      var _getEchart = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var id, title;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = this.id, title = this.title;\n                getChartData().then(function (res) {\n                  var dataX = [];\n                  var dataY = [];\n                  res.forEach(function (item) {\n                    var date = new Date(item.endDate);\n                    var month = date.getMonth() + 1;\n                    var day = date.getDate();\n                    dataX.push(month + '-' + day);\n                    dataY.push(item[id]);\n                  });\n                  var fun = {\n                    amountMoney: function amountMoney() {\n                      return new _this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                        offset: 0,\n                        color: 'rgba(35, 82, 188, 0.99)'\n                      }, {\n                        offset: 1,\n                        color: 'rgba(35, 82, 188, 0.2)'\n                      }]);\n                    },\n                    clickCount: function clickCount() {\n                      return new _this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                        offset: 0,\n                        color: 'rgba(255, 210, 0, 1)'\n                      }, {\n                        offset: 1,\n                        color: 'rgba(255, 210, 0, 0.3)'\n                      }]);\n                    },\n                    seconds: function seconds() {\n                      return new _this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                        offset: 0,\n                        color: 'rgba(255, 210, 0, 1)'\n                      }, {\n                        offset: 1,\n                        color: 'rgba(255, 210, 0, 0.3)'\n                      }]);\n                    }\n                  };\n                  _this.chart = _this.$echarts.init(document.getElementById(id));\n                  var option = {\n                    title: {\n                      text: title,\n                      textStyle: {\n                        color: '#fff',\n                        fontSize: 15\n                      },\n                      top: '4%',\n                      left: '2%'\n                    },\n                    grid: {\n                      top: '20%',\n                      left: '2%',\n                      bottom: '5%',\n                      containLabel: true\n                    },\n                    tooltip: {\n                      trigger: 'axis',\n                      backgroundColor: 'rgba(50, 50, 50, 0.5)'\n                    },\n                    xAxis: {\n                      data: dataX,\n                      boundaryGap: true,\n                      axisLabel: {\n                        show: true,\n                        textStyle: {\n                          color: '#fff',\n                          // 更改坐标轴文字颜色\n                          fontSize: 12 // 更改坐标轴文字大小\n\n                        }\n                      },\n                      // axisTick: {\n                      //   show: false // 隐藏刻度线\n                      // },\n                      axisLine: {\n                        lineStyle: {\n                          color: '#fff'\n                        }\n                      }\n                    },\n                    yAxis: {\n                      type: 'value',\n                      axisTick: {\n                        show: false\n                      },\n                      axisLabel: {\n                        show: true,\n                        textStyle: {\n                          color: '#fff',\n                          fontSize: 12\n                        }\n                      },\n                      splitLine: {\n                        show: false\n                      },\n                      axisLine: {\n                        lineStyle: {\n                          color: '#fff'\n                        }\n                      }\n                    },\n                    series: [{\n                      data: dataY,\n                      type: 'bar',\n                      smooth: true,\n                      itemStyle: {\n                        color: fun[id]()\n                      },\n                      barWidth: 10,\n                      barGap: '30%'\n                    }] // linear-gradient(0deg,rgba(255,210,0,1) 0%,rgba(255,210,0,0.3) 100%);\n\n                  };\n\n                  _this.chart.setOption(option);\n                }).catch(function (err) {\n                  _this.$message.error(err.message);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getEchart() {\n        return _getEchart.apply(this, arguments);\n      }\n\n      return getEchart;\n    }()\n  }\n};",{"version":3,"sources":["lineChart.vue"],"names":[],"mappings":";;;;;;;AAIA,OAAA,MAAA,MAAA,iCAAA;AACA,SAAA,YAAA,QAAA,oBAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AATA,GAPA;AAoBA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,MAAA;AACA;AAHA,GApBA;AAyBA,EAAA,OAzBA,qBAyBA;AACA,SAAA,SAAA;AACA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,SADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,EAFA,GAEA,IAFA,CAEA,EAFA,EAEA,KAFA,GAEA,IAFA,CAEA,KAFA;AAGA,gBAAA,YAAA,GACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,sBAAA,KAAA,GAAA,EAAA;AACA,sBAAA,KAAA,GAAA,EAAA;AACA,kBAAA,GAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,wBAAA,IAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA;AACA,wBAAA,KAAA,GAAA,IAAA,CAAA,QAAA,KAAA,CAAA;AACA,wBAAA,GAAA,GAAA,IAAA,CAAA,OAAA,EAAA;AACA,oBAAA,KAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,GAAA,GAAA;AACA,oBAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,mBANA;AAOA,sBAAA,GAAA,GAAA;AACA,oBAAA,WAAA,EAAA,uBAAA;AACA,6BAAA,IAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CACA;AAAA,wBAAA,MAAA,EAAA,CAAA;AAAA,wBAAA,KAAA,EAAA;AAAA,uBADA,EAEA;AAAA,wBAAA,MAAA,EAAA,CAAA;AAAA,wBAAA,KAAA,EAAA;AAAA,uBAFA,CAAA,CAAA;AAIA,qBANA;AAOA,oBAAA,UAAA,EAAA,sBAAA;AACA,6BAAA,IAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CACA;AAAA,wBAAA,MAAA,EAAA,CAAA;AAAA,wBAAA,KAAA,EAAA;AAAA,uBADA,EAEA;AAAA,wBAAA,MAAA,EAAA,CAAA;AAAA,wBAAA,KAAA,EAAA;AAAA,uBAFA,CAAA,CAAA;AAIA,qBAZA;AAaA,oBAAA,OAAA,EAAA,mBAAA;AACA,6BAAA,IAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CACA;AAAA,wBAAA,MAAA,EAAA,CAAA;AAAA,wBAAA,KAAA,EAAA;AAAA,uBADA,EAEA;AAAA,wBAAA,MAAA,EAAA,CAAA;AAAA,wBAAA,KAAA,EAAA;AAAA,uBAFA,CAAA,CAAA;AAIA;AAlBA,mBAAA;AAoBA,kBAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,EAAA,CAAA,CAAA;AACA,sBAAA,MAAA,GAAA;AACA,oBAAA,KAAA,EAAA;AACA,sBAAA,IAAA,EAAA,KADA;AAEA,sBAAA,SAAA,EAAA;AACA,wBAAA,KAAA,EAAA,MADA;AAEA,wBAAA,QAAA,EAAA;AAFA,uBAFA;AAMA,sBAAA,GAAA,EAAA,IANA;AAOA,sBAAA,IAAA,EAAA;AAPA,qBADA;AAUA,oBAAA,IAAA,EAAA;AACA,sBAAA,GAAA,EAAA,KADA;AAEA,sBAAA,IAAA,EAAA,IAFA;AAGA,sBAAA,MAAA,EAAA,IAHA;AAIA,sBAAA,YAAA,EAAA;AAJA,qBAVA;AAgBA,oBAAA,OAAA,EAAA;AACA,sBAAA,OAAA,EAAA,MADA;AAEA,sBAAA,eAAA,EAAA;AAFA,qBAhBA;AAoBA,oBAAA,KAAA,EAAA;AACA,sBAAA,IAAA,EAAA,KADA;AAEA,sBAAA,WAAA,EAAA,IAFA;AAGA,sBAAA,SAAA,EAAA;AACA,wBAAA,IAAA,EAAA,IADA;AAEA,wBAAA,SAAA,EAAA;AACA,0BAAA,KAAA,EAAA,MADA;AACA;AACA,0BAAA,QAAA,EAAA,EAFA,CAEA;;AAFA;AAFA,uBAHA;AAUA;AACA;AACA;AACA,sBAAA,QAAA,EAAA;AACA,wBAAA,SAAA,EAAA;AACA,0BAAA,KAAA,EAAA;AADA;AADA;AAbA,qBApBA;AAuCA,oBAAA,KAAA,EAAA;AACA,sBAAA,IAAA,EAAA,OADA;AAEA,sBAAA,QAAA,EAAA;AACA,wBAAA,IAAA,EAAA;AADA,uBAFA;AAKA,sBAAA,SAAA,EAAA;AACA,wBAAA,IAAA,EAAA,IADA;AAEA,wBAAA,SAAA,EAAA;AACA,0BAAA,KAAA,EAAA,MADA;AAEA,0BAAA,QAAA,EAAA;AAFA;AAFA,uBALA;AAYA,sBAAA,SAAA,EAAA;AACA,wBAAA,IAAA,EAAA;AADA,uBAZA;AAeA,sBAAA,QAAA,EAAA;AACA,wBAAA,SAAA,EAAA;AACA,0BAAA,KAAA,EAAA;AADA;AADA;AAfA,qBAvCA;AA4DA,oBAAA,MAAA,EAAA,CACA;AACA,sBAAA,IAAA,EAAA,KADA;AAEA,sBAAA,IAAA,EAAA,KAFA;AAGA,sBAAA,MAAA,EAAA,IAHA;AAIA,sBAAA,SAAA,EAAA;AACA,wBAAA,KAAA,EAAA,GAAA,CAAA,EAAA,CAAA;AADA,uBAJA;AAOA,sBAAA,QAAA,EAAA,EAPA;AAQA,sBAAA,MAAA,EAAA;AARA,qBADA,CA5DA,CAyEA;;AAzEA,mBAAA;;AA0EA,kBAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA;AACA,iBA3GA,EA4GA,KA5GA,CA4GA,UAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA;AACA,iBA9GA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5BA,CAAA","sourcesContent":["<template>\n  <div :id=\"id\" class=\"lineChart\"></div>\n</template>\n<script>\nimport resize from '@/views/chart/chartsView/resize'\nimport { getChartData } from '@/http/api/homeApi'\nexport default {\n  mixins: [resize],\n  data () {\n    return {\n      chart: null\n    }\n  },\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    isFull: {\n      type: Boolean\n    }\n  },\n  watch: {\n    isFull () {\n      this.chart.resize()\n    }\n  },\n  mounted () {\n    this.getEchart()\n  },\n  methods: {\n    async getEchart () {\n      const { id, title } = this\n      getChartData()\n        .then(res => {\n          let dataX = []\n          let dataY = []\n          res.forEach(item => {\n            let date = new Date(item.endDate)\n            let month = date.getMonth() + 1\n            let day = date.getDate()\n            dataX.push(month + '-' + day)\n            dataY.push(item[id])\n          })\n          const fun = {\n            amountMoney: () => {\n              return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: 'rgba(35, 82, 188, 0.99)' },\n                { offset: 1, color: 'rgba(35, 82, 188, 0.2)' }\n              ])\n            },\n            clickCount: () => {\n              return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: 'rgba(255, 210, 0, 1)' },\n                { offset: 1, color: 'rgba(255, 210, 0, 0.3)' }\n              ])\n            },\n            seconds: () => {\n              return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: 'rgba(255, 210, 0, 1)' },\n                { offset: 1, color: 'rgba(255, 210, 0, 0.3)' }\n              ])\n            }\n          }\n          this.chart = this.$echarts.init(document.getElementById(id))\n          const option = {\n            title: {\n              text: title,\n              textStyle: {\n                color: '#fff',\n                fontSize: 15\n              },\n              top: '4%',\n              left: '2%'\n            },\n            grid: {\n              top: '20%',\n              left: '2%',\n              bottom: '5%',\n              containLabel: true\n            },\n            tooltip: {\n              trigger: 'axis',\n              backgroundColor: 'rgba(50, 50, 50, 0.5)'\n            },\n            xAxis: {\n              data: dataX,\n              boundaryGap: true,\n              axisLabel: {\n                show: true,\n                textStyle: {\n                  color: '#fff', // 更改坐标轴文字颜色\n                  fontSize: 12 // 更改坐标轴文字大小\n                }\n              },\n              // axisTick: {\n              //   show: false // 隐藏刻度线\n              // },\n              axisLine: {\n                lineStyle: {\n                  color: '#fff'\n                }\n              }\n            },\n            yAxis: {\n              type: 'value',\n              axisTick: {\n                show: false\n              },\n              axisLabel: {\n                show: true,\n                textStyle: {\n                  color: '#fff',\n                  fontSize: 12\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisLine: {\n                lineStyle: {\n                  color: '#fff'\n                }\n              }\n            },\n            series: [\n              {\n                data: dataY,\n                type: 'bar',\n                smooth: true,\n                itemStyle: {\n                  color: fun[id]()\n                },\n                barWidth: 10,\n                barGap: '30%'\n              }\n            ]\n          }\n          // linear-gradient(0deg,rgba(255,210,0,1) 0%,rgba(255,210,0,0.3) 100%);\n          this.chart.setOption(option)\n        })\n        .catch(err => {\n          this.$message.error(err.message)\n        })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/home"}]}