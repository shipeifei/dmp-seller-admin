{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/sys/profile/createEditDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/sys/profile/createEditDialog.vue","mtime":1559542041000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport { getAllPlatform } from '@/http/api/platformApi.js';\nimport { getTacticsMapping } from '@/http/api/profileApi';\nexport default {\n  components: {\n    draggable: draggable\n  },\n  data: function data() {\n    return {\n      platformArr: [],\n      returnTypeArr: ['url', 'product'],\n      StrategyTypeArr: [],\n      tacticsObj: {},\n      tacticsList: [{}, {}, {}, {}, {}],\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: ''\n      },\n      createForm: {\n        platformId: '',\n        profileDesc: '',\n        profileName: '',\n        recommNumber: 0,\n        returnType: '',\n        platStrategy: {\n          listSubs: [{\n            keyParam: '',\n            subStrategy: '',\n            subStrategyNumber: '',\n            strategyPosition: '',\n            stableCodes: ''\n          }]\n        }\n      },\n      date: this.$currentDate()\n    };\n  },\n  beforeUpdate: function beforeUpdate() {\n    var num = 0;\n    this.createForm.platStrategy.listSubs.forEach(function (item) {\n      num += item.subStrategyNumber * 1;\n    });\n\n    if (num !== this.createForm.recommNumber * 1) {\n      this.createForm.recommNumber = num;\n    }\n  },\n  methods: {\n    subStrategyChange: function subStrategyChange(index) {\n      var subStrategy = this.createForm.platStrategy.listSubs[index].subStrategy;\n      this.createForm.platStrategy.listSubs[index].keyParam = '';\n      this.tacticsList[index] = this.tacticsObj[subStrategy];\n      this.createForm.platStrategy.listSubs[index].stableCodes = '';\n    },\n    removeDomain: function removeDomain(item) {\n      var index = this.createForm.platStrategy.listSubs.indexOf(item);\n      this.createForm.platStrategy.listSubs.splice(index, 1);\n      this.$message.success(this.$t('strategyDelSuccessful'));\n    },\n    addDomain: function addDomain() {\n      // let len = this.createForm.platStrategy.listSubs.length\n      // if (len < 5) {\n      this.createForm.platStrategy.listSubs.push({\n        keyParam: '',\n        subStrategy: '',\n        subStrategyNumber: '',\n        strategyPosition: '',\n        stableCodes: ''\n      });\n      this.$message.success(this.$t('strategyAddSuccessful')); // } else {\n      //   this.$message.error('策略最多添加5个!')\n      // }\n    },\n    open: function open(item) {\n      var _this = this;\n\n      this.tacticsList = [{}, {}, {}, {}, {}];\n      Promise.all([getAllPlatform(), getTacticsMapping()]).then(function (res) {\n        _this.platformArr = res[0];\n        _this.StrategyTypeArr = res[1][0];\n        _this.tacticsObj = res[1][1];\n\n        if (item) {\n          _this.createForm = {\n            id: item.id,\n            platformId: item.platformId,\n            profileDesc: item.profileDesc,\n            profileName: item.profileName,\n            recommNumber: item.recommNumber,\n            returnType: item.returnType,\n            strategyId: item.strategyId,\n            platStrategy: {\n              listSubs: item.platStrategy.listSubs\n            }\n          };\n          item.platStrategy.listSubs.forEach(function (item, index) {\n            _this.tacticsList[index] = _this.tacticsObj[item.subStrategy];\n          });\n          _this.dialog = {\n            title: _this.$t('edit'),\n            labelName: _this.$t('save'),\n            buttonType: 'UPDATA'\n          };\n        } else {\n          _this.createForm = {\n            platformId: '',\n            profileDesc: '',\n            profileName: '',\n            recommNumber: 0,\n            returnType: '',\n            platStrategy: {\n              listSubs: [{\n                keyParam: '',\n                subStrategy: '',\n                subStrategyNumber: '',\n                strategyPosition: ''\n              }]\n            }\n          };\n          _this.dialog = {\n            title: _this.$t('create'),\n            labelName: _this.$t('create'),\n            buttonType: 'CREATE'\n          };\n        }\n\n        _this.$refs.recommandDialog.open();\n      });\n    },\n    onConfirmCreateType: function onConfirmCreateType(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var flag = false;\n          var obj = {};\n\n          if (!_this2.createForm.platformId) {\n            _this2.$message.error(_this2.$t('sourceNoempty'));\n\n            return false;\n          } else if (!_this2.createForm.profileName) {\n            _this2.$message.error(_this2.$t('profileNameNoempty'));\n\n            return false;\n          } else if (!_this2.createForm.returnType) {\n            _this2.$message.error(_this2.$t('returnTypeNoempty'));\n\n            return false;\n          } else if (!_this2.createForm.profileDesc) {\n            _this2.$message.error(_this2.$t('profileDesNoempty'));\n\n            return false;\n          }\n\n          _this2.createForm.platStrategy.listSubs.forEach(function (item) {\n            if (obj[item.subStrategy]) {\n              _this2.$message.error(_this2.$t('profileNorepeat'));\n\n              return flag = true;\n            } else if (!item.subStrategy) {\n              _this2.$message.error(_this2.$t('strategyNoempty'));\n\n              return flag = true;\n            } else if (!item.keyParam) {\n              _this2.$message.error(_this2.$t('algorithmNoempty'));\n\n              return flag = true;\n            } else if (!Number(item.subStrategyNumber)) {\n              _this2.$message.error(_this2.$t('numberNo'));\n\n              return flag = true;\n            } else if (!item.strategyPosition) {\n              _this2.$message.error(_this2.$t('PositionNo'));\n\n              return flag = true;\n            }\n\n            obj[item.subStrategy] = 1;\n          });\n\n          if (flag) {\n            return false;\n          }\n\n          _this2.$refs.recommandDialog.close();\n\n          _this2.createForm.platStrategy.listSubs.forEach(function (item, index) {\n            item.priorityLevel = index + 1;\n            delete item.id;\n            delete item.crTime;\n            delete item.modTime;\n            delete item.strategyId;\n          });\n\n          if (_this2.dialog.buttonType === 'CREATE') {\n            _this2.$emit('success', {\n              data: _this2.createForm,\n              code: 0\n            });\n          } else {\n            _this2.$emit('success', {\n              data: _this2.createForm,\n              code: 1\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["createEditDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <gucp-dialog ref=\"recommandDialog\" :title=\"dialog.title\" :confirm-label=\"dialog.labelName\" width=\"90%\" @confirm=\"onConfirmCreateType('createForm')\">\n        <el-form ref=\"createForm\" :model=\"createForm\" :inline=\"true\" label-suffix=\":\" label-position=\"right\" label-width=\"130px\">\n            <el-form-item :label=\"$t('source')\" prop=\"platformId\">\n                <el-select v-model=\"createForm.platformId\" :placeholder=\"$t('pleaseChoose')\" product>\n                    <el-option v-for=\"item in platformArr\" :key=\"item.id\" :label=\"item.platformDesc\" :value=\"item.id\" />\n                </el-select>\n            </el-form-item>\n            <el-form-item :label=\"$t('profileName')\" prop=\"profileName\">\n                <el-input v-model=\"createForm.profileName\" :placeholder=\"$t('pleaseContent')\" />\n            </el-form-item>\n\n            <el-form-item :label=\"$t('returnType')\" prop=\"returnType\">\n                <el-select v-model=\"createForm.returnType\" :placeholder=\"$t('pleaseChoose')\" product>\n                    <el-option v-for=\"item in returnTypeArr\" :key=\"item\" :label=\"item\" :value=\"item\" />\n                </el-select>\n            </el-form-item>\n            <br>\n            <el-form-item :label=\"$t('recommandA')\" prop=\"recommNumber\">\n                <el-input v-model.number=\"createForm.recommNumber\" disabled />\n            </el-form-item>\n            <el-form-item :label=\"$t('profileDes')\" prop=\"profileDesc\">\n                <el-input v-model=\"createForm.profileDesc\" :maxlength=\"200\" :placeholder=\"$t('pleaseContent')\" type=\"textarea\" />\n            </el-form-item>\n            <draggable v-model=\"createForm.platStrategy.listSubs\">\n                <div v-for=\"(domain, index) in createForm.platStrategy.listSubs\" :key=\"index\" class=\"move-item\">\n                    <el-form-item :label=\"$t('strategy') + (index + 1)\" :prop=\"'listSubs' + index + 'subStrategy'\" label-width=\"68px\">\n                        <el-select v-model=\"domain.subStrategy\" :placeholder=\"$t('pleaseChoose')\" product @change=\"subStrategyChange(index)\">\n                            <el-option v-for=\"(item, key) in StrategyTypeArr\" :key=\"item\" :label=\"item\" :value=\"key\" />\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item :label=\"$t('algorithm') + (index + 1)\" :prop=\"'listSubs' + index + 'keyParam'\" label-width=\"72px\">\n                        <el-select v-model=\"domain.keyParam\" :placeholder=\"$t('pleaseChoose')\" product>\n                            <el-option v-for=\"(item, key) in tacticsList[index]\" :key=\"key\" :label=\"item\" :value=\"key\" />\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item :label=\"$t('number') + (index + 1)\" :prop=\"'listSubs' + index + 'subStrategyNumber'\" label-width=\"65px\">\n                        <el-input v-model.number=\"domain.subStrategyNumber\" :placeholder=\"$t('pleaseContent')\" />\n                    </el-form-item>\n                    <el-form-item :label=\"$t('Position') + (index +1)\" :prop=\"'listSubs' + index + 'strategyPosition'\" label-width=\"65px\">\n                        <el-input v-model=\"domain.strategyPosition\" :placeholder=\"$t('pleaseContent')\" />\n                    </el-form-item>\n                    <el-form-item :label=\"$t('Codes') + (index +1)\" :prop=\"'listSubs' + index + 'stableCodes'\" label-width=\"60px\">\n                        <el-input v-model=\"domain.stableCodes\" :placeholder=\"$t('pleaseContent')\" :disabled=\"domain.subStrategy!=='stable'\" />\n                    </el-form-item>\n                    <div class=\"action\">\n                        <i v-if=\"index === 0\" class=\"el-icon-circle-plus-outline icon\" @click=\"addDomain\" />\n                        <i v-else class=\"el-icon-remove-outline icon\" @click=\"removeDomain\" />\n                        <i class=\"el-icon-sort icon\" />\n                    </div>\n                </div>\n            </draggable>\n        </el-form>\n    </gucp-dialog>\n</template>\n<script>\nimport draggable from 'vuedraggable'\nimport { getAllPlatform } from '@/http/api/platformApi.js'\nimport { getTacticsMapping } from '@/http/api/profileApi'\nexport default {\n  components: {\n    draggable\n  },\n  data () {\n    return {\n      platformArr: [],\n      returnTypeArr: ['url', 'product'],\n      StrategyTypeArr: [],\n      tacticsObj: {},\n      tacticsList: [{}, {}, {}, {}, {}],\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: ''\n      },\n      createForm: {\n        platformId: '',\n        profileDesc: '',\n        profileName: '',\n        recommNumber: 0,\n        returnType: '',\n        platStrategy: {\n          listSubs: [\n            {\n              keyParam: '',\n              subStrategy: '',\n              subStrategyNumber: '',\n              strategyPosition: '',\n              stableCodes: ''\n            }\n          ]\n        }\n      },\n      date: this.$currentDate()\n    }\n  },\n  beforeUpdate () {\n    let num = 0\n    this.createForm.platStrategy.listSubs.forEach(item => {\n      num += item.subStrategyNumber * 1\n    })\n    if (num !== this.createForm.recommNumber * 1) {\n      this.createForm.recommNumber = num\n    }\n  },\n  methods: {\n    subStrategyChange (index) {\n      let subStrategy = this.createForm.platStrategy.listSubs[index]\n        .subStrategy\n      this.createForm.platStrategy.listSubs[index].keyParam = ''\n      this.tacticsList[index] = this.tacticsObj[subStrategy]\n      this.createForm.platStrategy.listSubs[index].stableCodes = ''\n    },\n    removeDomain (item) {\n      let index = this.createForm.platStrategy.listSubs.indexOf(item)\n      this.createForm.platStrategy.listSubs.splice(index, 1)\n      this.$message.success(this.$t('strategyDelSuccessful'))\n    },\n    addDomain () {\n      // let len = this.createForm.platStrategy.listSubs.length\n      // if (len < 5) {\n      this.createForm.platStrategy.listSubs.push({\n        keyParam: '',\n        subStrategy: '',\n        subStrategyNumber: '',\n        strategyPosition: '',\n        stableCodes: ''\n      })\n      this.$message.success(this.$t('strategyAddSuccessful'))\n      // } else {\n      //   this.$message.error('策略最多添加5个!')\n      // }\n    },\n    open (item) {\n      this.tacticsList = [{}, {}, {}, {}, {}]\n      Promise.all([getAllPlatform(), getTacticsMapping()]).then(res => {\n        this.platformArr = res[0]\n        this.StrategyTypeArr = res[1][0]\n        this.tacticsObj = res[1][1]\n        if (item) {\n          this.createForm = {\n            id: item.id,\n            platformId: item.platformId,\n            profileDesc: item.profileDesc,\n            profileName: item.profileName,\n            recommNumber: item.recommNumber,\n            returnType: item.returnType,\n            strategyId: item.strategyId,\n            platStrategy: {\n              listSubs: item.platStrategy.listSubs\n            }\n          }\n          item.platStrategy.listSubs.forEach((item, index) => {\n            this.tacticsList[index] = this.tacticsObj[item.subStrategy]\n          })\n          this.dialog = {\n            title: this.$t('edit'),\n            labelName: this.$t('save'),\n            buttonType: 'UPDATA'\n          }\n        } else {\n          this.createForm = {\n            platformId: '',\n            profileDesc: '',\n            profileName: '',\n            recommNumber: 0,\n            returnType: '',\n            platStrategy: {\n              listSubs: [\n                {\n                  keyParam: '',\n                  subStrategy: '',\n                  subStrategyNumber: '',\n                  strategyPosition: ''\n                }\n              ]\n            }\n          }\n          this.dialog = {\n            title: this.$t('create'),\n            labelName: this.$t('create'),\n            buttonType: 'CREATE'\n          }\n        }\n        this.$refs.recommandDialog.open()\n      })\n    },\n    onConfirmCreateType (formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let flag = false\n          let obj = {}\n          if (!this.createForm.platformId) {\n            this.$message.error(this.$t('sourceNoempty'))\n            return false\n          } else if (!this.createForm.profileName) {\n            this.$message.error(this.$t('profileNameNoempty'))\n            return false\n          } else if (!this.createForm.returnType) {\n            this.$message.error(this.$t('returnTypeNoempty'))\n            return false\n          } else if (!this.createForm.profileDesc) {\n            this.$message.error(this.$t('profileDesNoempty'))\n            return false\n          }\n\n          this.createForm.platStrategy.listSubs.forEach(item => {\n            if (obj[item.subStrategy]) {\n              this.$message.error(this.$t('profileNorepeat'))\n              return (flag = true)\n            } else if (!item.subStrategy) {\n              this.$message.error(this.$t('strategyNoempty'))\n              return (flag = true)\n            } else if (!item.keyParam) {\n              this.$message.error(this.$t('algorithmNoempty'))\n              return (flag = true)\n            } else if (!Number(item.subStrategyNumber)) {\n              this.$message.error(this.$t('numberNo'))\n              return (flag = true)\n            } else if (!item.strategyPosition) {\n              this.$message.error(this.$t('PositionNo'))\n              return (flag = true)\n            }\n            obj[item.subStrategy] = 1\n          })\n          if (flag) {\n            return false\n          }\n          this.$refs.recommandDialog.close()\n          this.createForm.platStrategy.listSubs.forEach((item, index) => {\n            item.priorityLevel = index + 1\n            delete item.id\n            delete item.crTime\n            delete item.modTime\n            delete item.strategyId\n          })\n          if (this.dialog.buttonType === 'CREATE') {\n            this.$emit('success', { data: this.createForm, code: 0 })\n          } else {\n            this.$emit('success', { data: this.createForm, code: 1 })\n          }\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.move-item {\n  display: flex;\n  align-items: center;\n  height: 50px;\n  div {\n    display: flex;\n    align-items: center;\n    height: 100%;\n  }\n}\n.icon {\n  font-size: 20px;\n  color: #90a4ae;\n  text-align: center;\n  margin-left: 8px;\n  margin-top: -8px;\n  cursor: pointer;\n}\n.el-textarea {\n  width: 500px;\n}\n.el-input,\n.el-select {\n  width: 150px;\n  padding: 0;\n  margin: 0;\n}\n</style>\n"],"sourceRoot":"src/views/sys/profile"}]}