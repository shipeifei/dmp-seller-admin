{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/sys/scenario/createEditDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/sys/scenario/createEditDialog.vue","mtime":1559700038000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAllPlatform, getProfileByPlatformId } from '@/http/api/platformApi.js';\nexport default {\n  data: function data() {\n    return {\n      createForm: {\n        platformId: '',\n        profileId: '',\n        scenarioName: '',\n        scenarioDesc: '',\n        exposurePoint: ''\n      },\n      platformArr: [],\n      profileArr: [],\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: ''\n      }\n    };\n  },\n  methods: {\n    platformIdChange: function platformIdChange(id) {\n      var _this = this;\n\n      this.createForm.profileId = '';\n      getProfileByPlatformId(id).then(function (res) {\n        _this.profileArr = res;\n      });\n    },\n    open: function open(item) {\n      var _this2 = this;\n\n      getAllPlatform().then(function (res) {\n        _this2.platformArr = res;\n      });\n\n      if (item) {\n        this.createForm = item;\n        this.dialog = {\n          title: this.$t('edit'),\n          labelName: this.$t('save'),\n          buttonType: 'UPDATA'\n        };\n        getProfileByPlatformId(item.platformId).then(function (res) {\n          _this2.profileArr = res;\n        });\n      } else {\n        this.profileArr = [];\n        this.createForm = {\n          platformId: '',\n          profileId: '',\n          scenarioName: '',\n          scenarioDesc: '',\n          exposurePoint: ''\n        };\n        this.dialog = {\n          title: this.$t('create'),\n          labelName: this.$t('create'),\n          buttonType: 'CREATE'\n        };\n      }\n\n      this.$refs.platformDialog.open();\n    },\n    onConfirmCreateType: function onConfirmCreateType(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          if (!_this3.createForm.scenarioName) {\n            _this3.$message.error(_this3.$t('sceneNoempty'));\n\n            return false;\n          } else if (!_this3.createForm.scenarioDesc) {\n            _this3.$message.error(_this3.$t('describeNoempty'));\n\n            return false;\n          } else if (!_this3.createForm.platformId) {\n            _this3.$message.error(_this3.$t('sourceNoempty'));\n\n            return false;\n          } else if (!_this3.createForm.profileId) {\n            _this3.$message.error(_this3.$t('profileNoempty'));\n\n            return false;\n          }\n\n          _this3.$refs.platformDialog.close();\n\n          if (_this3.dialog.buttonType === 'CREATE') {\n            _this3.$emit('success', {\n              data: _this3.createForm,\n              code: 0\n            });\n          } else {\n            _this3.$emit('success', {\n              data: _this3.createForm,\n              code: 1\n            });\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["createEditDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <gucp-dialog ref=\"platformDialog\" :title=\"dialog.title\" :confirm-label=\"dialog.labelName\"\n    @confirm=\"onConfirmCreateType('createForm')\">\n    <el-form ref=\"createForm\" :model=\"createForm\" label-width=\"80px\" label-suffix=\":\" label-position=\"right\">\n      <el-form-item :label=\"$t('scene')\" prop=\"scenarioName\">\n        <el-input v-model=\"createForm.scenarioName\" :placeholder=\"$t('scene')\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('describe')\" prop=\"scenarioDesc\">\n        <el-input v-model=\"createForm.scenarioDesc\" :placeholder=\"$t('describe')\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('source')\" prop=\"Platform\">\n        <el-select v-model=\"createForm.platformId\" product @change=\"platformIdChange\">\n          <el-option v-for=\"item in platformArr\" :key=\"item.id\" :label=\"item.platformDesc\" :value=\"item.id\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item :label=\"$t('profile')\" prop=\"Profile\">\n        <el-select v-model=\"createForm.profileId\" product>\n          <el-option v-for=\"item in profileArr\" :key=\"item.id\" :label=\"item.profileName\" :value=\"item.id\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item :label=\"$t('Point')\" prop=\"exposurePoint\">\n          <el-input  v-model=\"createForm.exposurePoint\"  :placeholder=\"$t('Point')\"></el-input>\n      </el-form-item>\n    </el-form>\n  </gucp-dialog>\n</template>\n<script>\nimport { getAllPlatform, getProfileByPlatformId } from '@/http/api/platformApi.js'\n\nexport default {\n  data () {\n    return {\n      createForm: {\n        platformId: '',\n        profileId: '',\n        scenarioName: '',\n        scenarioDesc: '',\n        exposurePoint: ''\n      },\n      platformArr: [],\n      profileArr: [],\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: ''\n      }\n    }\n  },\n  methods: {\n    platformIdChange (id) {\n      this.createForm.profileId = ''\n      getProfileByPlatformId(id).then(res => {\n        this.profileArr = res\n      })\n    },\n    open (item) {\n      getAllPlatform().then(res => {\n        this.platformArr = res\n      })\n      if (item) {\n        this.createForm = item\n        this.dialog = {\n          title: this.$t('edit'),\n          labelName: this.$t('save'),\n          buttonType: 'UPDATA'\n        }\n        getProfileByPlatformId(item.platformId).then(res => {\n          this.profileArr = res\n        })\n      } else {\n        this.profileArr = []\n        this.createForm = {\n          platformId: '',\n          profileId: '',\n          scenarioName: '',\n          scenarioDesc: '',\n          exposurePoint: ''\n        }\n        this.dialog = {\n          title: this.$t('create'),\n          labelName: this.$t('create'),\n          buttonType: 'CREATE'\n        }\n      }\n      this.$refs.platformDialog.open()\n    },\n    onConfirmCreateType (formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (!this.createForm.scenarioName) {\n            this.$message.error(this.$t('sceneNoempty'))\n            return false\n          } else if (!this.createForm.scenarioDesc) {\n            this.$message.error(this.$t('describeNoempty'))\n            return false\n          } else if (!this.createForm.platformId) {\n            this.$message.error(this.$t('sourceNoempty'))\n            return false\n          } else if (!this.createForm.profileId) {\n            this.$message.error(this.$t('profileNoempty'))\n            return false\n          }\n          this.$refs.platformDialog.close()\n          if (this.dialog.buttonType === 'CREATE') {\n            this.$emit('success', { data: this.createForm, code: 0 })\n          } else {\n            this.$emit('success', { data: this.createForm, code: 1 })\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/sys/scenario"}]}