{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/sys/association/createEditDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/sys/association/createEditDialog.vue","mtime":1553649389000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.index-of\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport { getProductCodeByName } from '@/http/api/platformApi.js';\nexport default {\n  components: {\n    draggable: draggable\n  },\n  data: function data() {\n    return {\n      options: [],\n      platformArr: [],\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: 'CREATE'\n      },\n      createForm: {\n        id: '',\n        mainProductId: '',\n        bu: '',\n        listDetails: [{\n          subProductId: ''\n        }]\n      }\n    };\n  },\n  methods: {\n    removeDomain: function removeDomain(item) {\n      var index = this.createForm.listDetails.indexOf(item);\n      this.createForm.listDetails.splice(index, 1);\n      this.$message.success(this.$t('Delsuccess'));\n    },\n    addDomain: function addDomain() {\n      this.createForm.listDetails.push({\n        subProductId: ''\n      });\n      this.$message.success(this.$t('Addsuccess'));\n    },\n    open: function open(item) {\n      var _this = this;\n\n      getProductCodeByName('').then(function (res) {\n        _this.options = res;\n      });\n\n      if (item) {\n        this.createForm = {\n          id: item.id,\n          mainProductId: item.mainProductId,\n          bu: item.bu,\n          listDetails: item.listDetails\n        };\n        this.dialog = {\n          title: this.$t('edit'),\n          labelName: this.$t('save'),\n          buttonType: 'UPDATE'\n        };\n      } else {\n        this.createForm = {\n          mainProductId: '',\n          bu: '',\n          listDetails: [{\n            subProductId: ''\n          }]\n        };\n        this.dialog = {\n          title: this.$t('create'),\n          labelName: this.$t('create'),\n          buttonType: 'CREATE'\n        };\n      }\n\n      this.$refs.hotProductDialog.open();\n    },\n    onConfirmCreateType: function onConfirmCreateType(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var flag = false;\n          var obj = {};\n\n          if (!_this2.createForm.mainProductId) {\n            _this2.$message.error(_this2.$t('ProductNoempty'));\n\n            return false;\n          }\n\n          _this2.createForm.listDetails.forEach(function (item) {\n            if (obj[item.subProductId]) {\n              _this2.$message.error(_this2.$t('ProductNorepeated'));\n\n              return flag = true;\n            } else if (!item.subProductId) {\n              _this2.$message.error(_this2.$t('ProductNoempty'));\n\n              return flag = true;\n            }\n\n            obj[item.subProductId] = 1;\n          });\n\n          if (flag) {\n            return false;\n          }\n\n          _this2.$refs.hotProductDialog.close();\n\n          if (_this2.dialog.buttonType === 'CREATE') {\n            _this2.$emit('success', {\n              data: _this2.createForm,\n              code: 0\n            });\n          } else {\n            _this2.$emit('success', {\n              data: _this2.createForm,\n              code: 1\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["createEditDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <gucp-dialog\n    ref=\"hotProductDialog\"\n    :title=\"dialog.title\"\n    :confirm-label=\"dialog.labelName\"\n    width=\"60%\"\n    @confirm=\"onConfirmCreateType('createForm')\"\n  >\n    <el-form\n      ref=\"createForm\"\n      :model=\"createForm\"\n      :inline=\"true\"\n      label-suffix=\":\"\n      label-position=\"right\"\n      label-width=\"140px\"\n    >\n      <el-form-item :label=\"$t('mainProduct')\" prop=\"mainProductId\">\n        <el-input v-model=\"createForm.mainProductId\" />\n      </el-form-item>\n      <draggable v-model=\"createForm.listDetails\">\n        <div\n          v-for=\"(domain, index) in createForm.listDetails\"\n          :key=\"index\"\n          class=\"move-item\"\n        >\n          <el-form-item\n            :label=\"$t('relatedProducts') + (index + 1)\"\n            :prop=\"'createFormlistDetails' + index + 'subProductId'\"\n          >\n            <el-select\n              v-model=\"domain.subProductId\"\n              :placeholder=\"$t('pleaseChoose')\"\n              filterable\n              product\n            >\n              <el-option\n                v-for=\"item in options\"\n                :key=\"item.code\"\n                :label=\"item.codeName\"\n                :value=\"item.code\"\n              />\n            </el-select>\n            <i\n              v-if=\"index === 0\"\n              class=\"el-icon-circle-plus-outline icon\"\n              @click=\"addDomain\"\n            />\n            <i\n              v-else\n              class=\"el-icon-remove-outline icon\"\n              @click.prevent=\"removeDomain(domain)\"\n            />\n            <i class=\"el-icon-sort icon\" />\n          </el-form-item>\n        </div>\n      </draggable>\n    </el-form>\n  </gucp-dialog>\n</template>\n<script>\nimport draggable from 'vuedraggable'\nimport { getProductCodeByName } from '@/http/api/platformApi.js'\nexport default {\n  components: {\n    draggable\n  },\n  data () {\n    return {\n      options: [],\n      platformArr: [],\n      dialog: {\n        title: this.$t('create'),\n        labelName: this.$t('create'),\n        buttonType: 'CREATE'\n      },\n      createForm: {\n        id: '',\n        mainProductId: '',\n        bu: '',\n        listDetails: [\n          {\n            subProductId: ''\n          }\n        ]\n      }\n    }\n  },\n  methods: {\n    removeDomain (item) {\n      let index = this.createForm.listDetails.indexOf(item)\n      this.createForm.listDetails.splice(index, 1)\n      this.$message.success(this.$t('Delsuccess'))\n    },\n    addDomain () {\n      this.createForm.listDetails.push({\n        subProductId: ''\n      })\n      this.$message.success(this.$t('Addsuccess'))\n    },\n    open (item) {\n      getProductCodeByName('').then(res => {\n        this.options = res\n      })\n      if (item) {\n        this.createForm = {\n          id: item.id,\n          mainProductId: item.mainProductId,\n          bu: item.bu,\n          listDetails: item.listDetails\n        }\n        this.dialog = {\n          title: this.$t('edit'),\n          labelName: this.$t('save'),\n          buttonType: 'UPDATE'\n        }\n      } else {\n        this.createForm = {\n          mainProductId: '',\n          bu: '',\n          listDetails: [\n            {\n              subProductId: ''\n            }\n          ]\n        }\n        this.dialog = {\n          title: this.$t('create'),\n          labelName: this.$t('create'),\n          buttonType: 'CREATE'\n        }\n      }\n      this.$refs.hotProductDialog.open()\n    },\n    onConfirmCreateType (formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let flag = false\n          let obj = {}\n          if (!this.createForm.mainProductId) {\n            this.$message.error(this.$t('ProductNoempty'))\n            return false\n          }\n\n          this.createForm.listDetails.forEach(item => {\n            if (obj[item.subProductId]) {\n              this.$message.error(this.$t('ProductNorepeated'))\n              return (flag = true)\n            } else if (!item.subProductId) {\n              this.$message.error(this.$t('ProductNoempty'))\n              return (flag = true)\n            }\n            obj[item.subProductId] = 1\n          })\n          if (flag) {\n            return false\n          }\n          this.$refs.hotProductDialog.close()\n          if (this.dialog.buttonType === 'CREATE') {\n            this.$emit('success', { data: this.createForm, code: 0 })\n          } else {\n            this.$emit('success', { data: this.createForm, code: 1 })\n          }\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.move-item {\n  display: flex;\n  align-items: center;\n  height: 50px;\n}\n.icon {\n  font-size: 20px;\n  color: #90a4ae;\n  text-align: center;\n  margin-left: 8px;\n  margin-top: -8px;\n  cursor: pointer;\n}\n.el-textarea {\n  width: 500px;\n}\n.el-input,\n.el-select {\n  width: 150px;\n  padding: 0;\n  margin: 0;\n}\n</style>\n"],"sourceRoot":"src/views/sys/association"}]}