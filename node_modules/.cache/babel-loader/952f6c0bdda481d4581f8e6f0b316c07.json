{"remainingRequest":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js!/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shizhonghua/workspace/sell/src/views/sys/association/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shizhonghua/workspace/sell/src/views/sys/association/index.vue","mtime":1561373011000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shizhonghua/workspace/sell/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport createEditDialog from \"./createEditDialog\";\nimport { getProductRelationshipPage, getProductRelationship, saveAndUpdateProductRelationship, deleteProductRelationship } from '@/http/api/productRelationshipApi.js';\nexport default {\n  name: 'HotProduct',\n  components: {\n    createEditDialog: createEditDialog\n  },\n  data: function data() {\n    return {\n      index: 0,\n      pageIndex: 1,\n      pageSize: 10,\n      totalCount: 0,\n      productArr: [],\n      productRelationshipList: [],\n      productShowList: []\n    };\n  },\n  mounted: function mounted() {\n    this.getContent(1);\n  },\n  methods: {\n    productShow: function productShow(item) {\n      var _this = this;\n\n      getProductRelationship(item.id).then(function (res) {\n        _this.productShowList = res.listDetails;\n      });\n    },\n    getContent: function getContent(pageIndex) {\n      var _this2 = this;\n\n      var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      getProductRelationshipPage({\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      }).then(function (res) {\n        _this2.totalCount = res.totalCount;\n        _this2.productRelationshipList = res.contents;\n      });\n    },\n    itemChange: function itemChange() {\n      var _this3 = this;\n\n      for (var _len = arguments.length, result = new Array(_len), _key = 0; _key < _len; _key++) {\n        result[_key] = arguments[_key];\n      }\n\n      if (result[2]) {\n        this.index = result[1];\n        var id = result[0].id;\n        getProductRelationship(id).then(function (res) {\n          _this3.$refs.createEditDialog.open(res);\n        });\n      } else {\n        this.$confirm(\"\".concat(this.$t('ConfirmDelete'), \" \\\"\").concat(result[0].mainProductId, \"\\\"\")).then(function () {\n          deleteProductRelationship(result[0].id).then(function () {\n            _this3.$message.success(_this3.$t('Delsuccess'));\n\n            _this3.getContent(_this3.pageIndex);\n          });\n        }).catch(function () {\n          _this3.$message({\n            type: 'info',\n            message: _this3.$t('CancelDelete')\n          });\n        });\n      }\n    },\n    handleCurrentChange: function handleCurrentChange(pageIndex) {\n      this.pageIndex = pageIndex;\n      this.getContent(pageIndex);\n    },\n    getPageData: function getPageData(result) {\n      var _this4 = this;\n\n      var data = result.data,\n          code = result.code;\n      saveAndUpdateProductRelationship(data).then(function () {\n        if (code) {\n          _this4.$message.success(_this4.$t('AssociatedUpdate'));\n\n          _this4.getContent(_this4.pageIndex);\n        } else {\n          _this4.$message.success(_this4.$t('AssociatedCreate'));\n\n          _this4.pageIndex = 1;\n\n          _this4.getContent(1);\n        }\n      }).catch(function (err) {\n        _this4.$message.error(err.body.message);\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content-wrapper\">\n    <el-card>\n      <el-button type=\"primary\" size=\"medium\" @click=\"$refs.createEditDialog.open()\">\n        {{ $t('create') }}\n        <i class=\"el-icon-plus el-icon--right\" />\n      </el-button>\n    </el-card>\n    <el-table :data=\"productRelationshipList\" class=\"hot-table\">\n      <el-table-column :label=\"$t('productDes')\" prop=\"mainProductId\" />\n      <el-table-column label>\n        <template slot-scope=\"scope\">\n          <el-popover placement=\"right\" trigger=\"hover\" @show=\"productShow(scope.row)\">\n            <el-table :data=\"productShowList\">\n              <el-table-column :label=\"$t('relatedProducts')\" min-width=\"150\" property=\"subProductId\" />\n            </el-table>\n            <el-tag slot=\"reference\" type=\"success\">{{ $t('relatedProducts') }}</el-tag>\n          </el-popover>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('owner')\" prop=\"owner\" />\n      <el-table-column :label=\"$t('action')\">\n        <template slot-scope=\" scope\">\n          <el-button type=\"primary\" icon=\"el-icon-edit\" circle\n            @click=\"itemChange(scope.row, scope.$index, true)\" />\n          <el-button type=\"danger\" icon=\"el-icon-delete\" circle\n            @click=\"itemChange(scope.row, scope.$index, false)\" />\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"block\">\n      <el-pagination :current-page=\"pageIndex\" :page-size=\"pageSize\" :total=\"totalCount\"\n        layout=\"total, prev, pager, next, jumper\" @current-change=\"handleCurrentChange\" />\n    </div>\n    <create-edit-dialog ref=\"createEditDialog\" @success=\"getPageData\" />\n  </div>\n</template>\n<script>\nimport createEditDialog from './createEditDialog'\nimport {\n  getProductRelationshipPage,\n  getProductRelationship,\n  saveAndUpdateProductRelationship,\n  deleteProductRelationship\n} from '@/http/api/productRelationshipApi.js'\nexport default {\n  name: 'HotProduct',\n  components: {\n    createEditDialog\n  },\n  data () {\n    return {\n      index: 0,\n      pageIndex: 1,\n      pageSize: 10,\n      totalCount: 0,\n      productArr: [],\n      productRelationshipList: [],\n      productShowList: []\n    }\n  },\n  mounted () {\n    this.getContent(1)\n  },\n  methods: {\n    productShow (item) {\n      getProductRelationship(item.id).then(res => {\n        this.productShowList = res.listDetails\n      })\n    },\n    getContent (pageIndex, pageSize = 10) {\n      getProductRelationshipPage({ pageIndex, pageSize }).then(res => {\n        this.totalCount = res.totalCount\n        this.productRelationshipList = res.contents\n      })\n    },\n    itemChange (...result) {\n      if (result[2]) {\n        this.index = result[1]\n        let id = result[0].id\n        getProductRelationship(id).then(res => {\n          this.$refs.createEditDialog.open(res)\n        })\n      } else {\n        this.$confirm(`${this.$t('ConfirmDelete')} \"${result[0].mainProductId}\"`)\n          .then(() => {\n            deleteProductRelationship(result[0].id).then(() => {\n              this.$message.success(this.$t('Delsuccess'))\n              this.getContent(this.pageIndex)\n            })\n          })\n          .catch(() => {\n            this.$message({\n              type: 'info',\n              message: this.$t('CancelDelete')\n            })\n          })\n      }\n    },\n    handleCurrentChange (pageIndex) {\n      this.pageIndex = pageIndex\n      this.getContent(pageIndex)\n    },\n    getPageData (result) {\n      let { data, code } = result\n      saveAndUpdateProductRelationship(data)\n        .then(() => {\n          if (code) {\n            this.$message.success(this.$t('AssociatedUpdate'))\n            this.getContent(this.pageIndex)\n          } else {\n            this.$message.success(this.$t('AssociatedCreate'))\n            this.pageIndex = 1\n            this.getContent(1)\n          }\n        })\n        .catch(err => {\n          this.$message.error(err.body.message)\n        })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/sys/association"}]}